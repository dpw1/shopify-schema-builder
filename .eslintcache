[{"D:\\Web Dev\\diegofortes-projects\\shopify-schema-editor\\src\\index.js":"1","D:\\Web Dev\\diegofortes-projects\\shopify-schema-editor\\src\\reportWebVitals.js":"2","D:\\Web Dev\\diegofortes-projects\\shopify-schema-editor\\src\\App.js":"3","D:\\Web Dev\\diegofortes-projects\\shopify-schema-editor\\src\\components\\URL.js":"4","D:\\Web Dev\\diegofortes-projects\\shopify-schema-editor\\src\\components\\Creator.js":"5","D:\\Web Dev\\diegofortes-projects\\shopify-schema-editor\\src\\components\\Item.js":"6","D:\\Web Dev\\diegofortes-projects\\shopify-schema-editor\\src\\utils.js":"7","D:\\Web Dev\\diegofortes-projects\\shopify-schema-editor\\src\\components\\ConfirmDialog.js":"8","D:\\Web Dev\\diegofortes-projects\\shopify-schema-editor\\src\\components\\Text.js":"9","D:\\Web Dev\\diegofortes-projects\\shopify-schema-editor\\src\\components\\Form.js":"10","D:\\Web Dev\\diegofortes-projects\\shopify-schema-editor\\src\\components\\BeautifulDND.js":"11","D:\\Web Dev\\diegofortes-projects\\shopify-schema-editor\\src\\components\\FormItem.js":"12","D:\\Web Dev\\diegofortes-projects\\shopify-schema-editor\\src\\components\\CodeTable.js":"13","D:\\Web Dev\\diegofortes-projects\\shopify-schema-editor\\src\\store\\store.js":"14"},{"size":500,"mtime":1609097289308,"results":"15","hashOfConfig":"16"},{"size":362,"mtime":1609097289308,"results":"17","hashOfConfig":"16"},{"size":1109,"mtime":1631478285989,"results":"18","hashOfConfig":"16"},{"size":1814,"mtime":1610523781761,"results":"19","hashOfConfig":"16"},{"size":5350,"mtime":1631674924130,"results":"20","hashOfConfig":"16"},{"size":10519,"mtime":1631489347902,"results":"21","hashOfConfig":"16"},{"size":5876,"mtime":1631675046075,"results":"22","hashOfConfig":"16"},{"size":578,"mtime":1610591212790,"results":"23","hashOfConfig":"16"},{"size":1205,"mtime":1610610816425,"results":"24","hashOfConfig":"16"},{"size":2629,"mtime":1610605810188,"results":"25","hashOfConfig":"16"},{"size":3235,"mtime":1610608948346,"results":"26","hashOfConfig":"16"},{"size":4526,"mtime":1631674133145,"results":"27","hashOfConfig":"16"},{"size":2909,"mtime":1631674511057,"results":"28","hashOfConfig":"16"},{"size":227,"mtime":1631406630563,"results":"29","hashOfConfig":"16"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},"1jsqa9i",{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"32"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40","usedDeprecatedRules":"32"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"32"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46","usedDeprecatedRules":"32"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"32"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54","usedDeprecatedRules":"32"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"57","messages":"58","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"59","messages":"60","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"62"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"32"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},"D:\\Web Dev\\diegofortes-projects\\shopify-schema-editor\\src\\index.js",[],["68","69"],"D:\\Web Dev\\diegofortes-projects\\shopify-schema-editor\\src\\reportWebVitals.js",[],"D:\\Web Dev\\diegofortes-projects\\shopify-schema-editor\\src\\App.js",["70","71","72","73"],"import logo from \"./logo.svg\";\nimport \"./App.scss\";\nimport URL from \"./components/URL\";\nimport Creator from \"./components/Creator\";\nimport CodeTable from \"./components/CodeTable\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <div className=\"container\">\n        <h1 style={{ textAlign: \"center\", marginBottom: 40 }}>\n          EZFY Shopify Section Creator\n        </h1>\n        <h2 style={{ textAlign: \"center\", marginTop: -30, marginBottom: 40 }}>\n          Coded by{\" \"}\n          <a target=\"_blank\" href=\"https://ezfycode.com\">\n            ezfycode.com.\n          </a>\n        </h2>\n        <h3\n          style={{\n            textAlign: \"center\",\n            fontWeight: \"normal\",\n            marginTop: -30,\n            marginBottom: 60,\n          }}>\n          Copy & paste pre-made sections{\" \"}\n          <a target=\"_blank\" href=\"https://ezfycode.com/shop\">\n            available here\n          </a>\n          .\n        </h3>\n        <div className=\"App-wrapper\">\n          <Creator />\n          <CodeTable></CodeTable>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","D:\\Web Dev\\diegofortes-projects\\shopify-schema-editor\\src\\components\\URL.js",["74","75"],"import React from \"react\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport \"./URL.scss\";\r\nimport short from \"short-uuid\";\r\nimport { sortableContainer, sortableElement } from \"react-sortable-hoc\";\r\nimport arrayMove from \"array-move\";\r\n\r\nimport { useStatePersist as useState } from \"use-state-persist\";\r\n\r\nconst SortableItem = sortableElement(({ value }) => <li>{value}</li>);\r\n\r\nconst SortableContainer = sortableContainer(({ children }) => {\r\n  return <ul>{children}</ul>;\r\n});\r\n\r\nfunction URL() {\r\n  const { register, handleSubmit, watch, errors } = useForm();\r\n  const [items, setItems] = useState(\"@items\", []);\r\n\r\n  const onSortEnd = ({ oldIndex, newIndex }) => {\r\n    setItems(arrayMove(items, oldIndex, newIndex));\r\n  };\r\n\r\n  const onSubmit = (data) => {\r\n    const { url, label, info } = data;\r\n\r\n    const item = {\r\n      type: \"url\",\r\n      url,\r\n      label,\r\n      info,\r\n    };\r\n\r\n    setItems([...items, JSON.stringify(item)]);\r\n  };\r\n\r\n  return (\r\n    <div className=\"shopify-component shopify-component-url\">\r\n      <SortableContainer onSortEnd={onSortEnd}>\r\n        {items.map((value, i) => (\r\n          <SortableItem\r\n            key={`item-${short.generate()}`}\r\n            index={i}\r\n            value={value}\r\n          />\r\n        ))}\r\n      </SortableContainer>\r\n\r\n      <div className=\"container\">\r\n        <form onSubmit={handleSubmit(onSubmit)}>\r\n          <input ref={register} type=\"text\" name=\"id\" placeholder=\"ID\" />\r\n          <input ref={register} type=\"text\" name=\"label\" placeholder=\"URL\" />\r\n          <input\r\n            ref={register}\r\n            type=\"text\"\r\n            name=\"info\"\r\n            placeholder={`\"Choose a link.\"`}\r\n          />\r\n\r\n          <input type=\"submit\" value=\"submit\" />\r\n        </form>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default URL;\r\n","D:\\Web Dev\\diegofortes-projects\\shopify-schema-editor\\src\\components\\Creator.js",["76","77","78","79","80","81","82"],"import React, { useEffect, useState } from \"react\";\r\nimport short from \"short-uuid\";\r\nimport { sortableContainer, sortableElement } from \"react-sortable-hoc\";\r\nimport arrayMove from \"array-move\";\r\n\r\nimport { useForm } from \"react-hook-form\";\r\n\r\nimport { useStatePersist as useStickyState } from \"use-state-persist\";\r\n\r\nimport \"./Creator.scss\";\r\nimport {\r\n  schema,\r\n  updateJSONTextarea,\r\n  generateJSONSchema,\r\n  focusDropdown,\r\n  sleep,\r\n  convertToLiquidVariables,\r\n  generateJSONAndVariables,\r\n} from \"./../utils\";\r\n\r\nimport ConfirmDialog from \"./ConfirmDialog\";\r\nimport Item from \"./Item\";\r\n\r\nconst SortableItem = sortableElement(({ value }) => (\r\n  <React.Fragment>{value}</React.Fragment>\r\n));\r\n\r\nconst SortableContainer = sortableContainer(({ children }) => {\r\n  return <ul>{children}</ul>;\r\n});\r\n\r\nexport default function Creator() {\r\n  const { register, setValue, handleSubmit, watch, errors } = useForm();\r\n\r\n  const [variablesResult, setVariablesResult] = useStickyState(\r\n    \"@variablesResult\",\r\n    null,\r\n  );\r\n\r\n  const [jsonResult, setJsonResult] = useStickyState(\"@jsonResult\");\r\n\r\n  const [items, setItems] = useStickyState(\"@items\", []);\r\n\r\n  const handleUpdateTextarea = async () => {\r\n    await sleep(10);\r\n    const json = generateJSONSchema();\r\n    updateJSONTextarea(json);\r\n    setJsonResult(json);\r\n  };\r\n\r\n  const handleAddItem = async () => {\r\n    /* All available parameters can be found as the props for FormItem.js */\r\n    setItems([\r\n      ...items,\r\n      {\r\n        id: short.generate(),\r\n        type: \"text\",\r\n      },\r\n    ]);\r\n\r\n    await sleep(50);\r\n\r\n    focusDropdown();\r\n    setTimeout(() => window.scrollTo(0, document.body.scrollHeight), 50);\r\n    generateJSONAndVariables();\r\n  };\r\n\r\n  const addCustomItem = () => {\r\n    setItems([\r\n      {\r\n        id: short.generate(),\r\n        type: \"checkbox\",\r\n        duplicatedOptions: {\r\n          id: \"parallax\",\r\n          label: \"Parallax\",\r\n          default: true,\r\n        },\r\n      },\r\n    ]);\r\n  };\r\n\r\n  const handleDeleteItem = (id) => {\r\n    const updated = [...items].filter((e) => e.id !== id);\r\n    setItems(updated);\r\n    handleUpdateTextarea();\r\n    generateJSONAndVariables();\r\n  };\r\n\r\n  const handleOnChange = (e) => {\r\n    const { value: type } = e.target;\r\n\r\n    const id = e.target.getAttribute(\"id\");\r\n\r\n    let updated = [\r\n      ...items.map((e) => {\r\n        if (e.id === id) {\r\n          e.type = type;\r\n        }\r\n\r\n        return e;\r\n      }),\r\n    ];\r\n\r\n    setItems(updated);\r\n\r\n    handleUpdateTextarea();\r\n\r\n    const num = e.target.closest(`.item`).getAttribute(\"data-item-count\");\r\n    focusFirstInputWhenDropdownChanges(num);\r\n    generateJSONAndVariables();\r\n  };\r\n\r\n  const focusFirstInputWhenDropdownChanges = (num) => {\r\n    setTimeout(() => {\r\n      const $el = document.querySelector(\r\n        `[data-item-count*='${num}'] .FormItem-attr:nth-child(1) input`,\r\n      );\r\n\r\n      if (!$el) {\r\n        return;\r\n      }\r\n\r\n      $el.focus();\r\n    }, 50);\r\n\r\n    generateJSONAndVariables();\r\n  };\r\n\r\n  const onSortEnd = ({ oldIndex, newIndex }) => {\r\n    setItems(arrayMove(items, oldIndex, newIndex));\r\n\r\n    handleUpdateTextarea();\r\n    generateJSONAndVariables();\r\n  };\r\n\r\n  const handleToggle = (e, id) => {\r\n    console.log(id);\r\n    // const $parent = e.target.closest(\".item\");\r\n\r\n    // $parent.classList.toggle(\"item--toggle\");\r\n\r\n    let updated = [\r\n      ...items.map((e) => {\r\n        if (e.id === id) {\r\n          e.isToggled = !e.isToggled;\r\n        }\r\n\r\n        return e;\r\n      }),\r\n    ];\r\n\r\n    setItems(updated);\r\n  };\r\n\r\n  /* This function is responsible for generating the JSON and Liquid. \r\n  Its only purpose is to make the function \"generateJSONAndVariables\" from utils.js to work. */\r\n  const generateJSON = async () => {\r\n    handleUpdateTextarea();\r\n    const variables = convertToLiquidVariables(jsonResult);\r\n    await sleep(50);\r\n    setVariablesResult(variables);\r\n  };\r\n\r\n  useEffect(() => {\r\n    console.log(\"added items:\", items);\r\n  }, [items]);\r\n\r\n  return (\r\n    <div className=\"Creator\">\r\n      <SortableContainer onSortEnd={onSortEnd}>\r\n        {items.map((props, i) => {\r\n          console.log(\"item props: \", props);\r\n          return (\r\n            <SortableItem\r\n              key={`item-${short.generate()}`}\r\n              index={i}\r\n              value={\r\n                <Item\r\n                  duplicatedOptions={props.duplicatedOptions}\r\n                  isToggled={props.isToggled}\r\n                  Content={props.content}\r\n                  register={register}\r\n                  setValue={setValue}\r\n                  schema={schema}\r\n                  handleOnChange={handleOnChange}\r\n                  id={props.id}\r\n                  type={props.type}\r\n                  handleToggle={handleToggle}\r\n                  handleDeleteItem={handleDeleteItem}\r\n                  itemCount={`${i + 1}`}\r\n                  defaultValue={props.type}\r\n                  name={`name-${i}`}></Item>\r\n              }\r\n            />\r\n          );\r\n        })}\r\n      </SortableContainer>\r\n\r\n      <fieldset>\r\n        <button onClick={() => handleAddItem()}>Add</button>\r\n        <button\r\n          id=\"generateJSON\"\r\n          onClick={async () => {\r\n            generateJSON();\r\n          }}>\r\n          Generate JSON\r\n        </button>\r\n      </fieldset>\r\n    </div>\r\n  );\r\n}\r\n","D:\\Web Dev\\diegofortes-projects\\shopify-schema-editor\\src\\components\\Item.js",["83","84","85","86","87","88","89","90","91","92"],"import React, { useState, useEffect, useRef } from \"react\";\r\nimport {\r\n  addToIndex,\r\n  schema,\r\n  sleep,\r\n  transformDOMIntoJSON,\r\n  generateJSONAndVariables,\r\n} from \"./../utils\";\r\n\r\nimport { useStatePersist as useStickyState } from \"use-state-persist\";\r\nimport Collapsible from \"react-collapsible\";\r\nimport short from \"short-uuid\";\r\nimport \"./Item.scss\";\r\n\r\nimport Text from \"./Text\";\r\nimport FormItem from \"./FormItem\";\r\n\r\nconst renderElement = (\r\n  type,\r\n  itemId,\r\n  handleOnFormChange,\r\n  itemCount,\r\n  duplicatedOptions,\r\n  defaultOptions,\r\n) => {\r\n  switch (type) {\r\n    case \"header\":\r\n      return (\r\n        <FormItem\r\n          itemCount={itemCount}\r\n          options={[\"content\"]}\r\n          handleOnFormChange={handleOnFormChange}\r\n          type={\"header\"}\r\n          itemId={itemId}\r\n          duplicatedOptions={duplicatedOptions}\r\n          defaultOptions={{\r\n            content: \"Options\",\r\n          }}\r\n        />\r\n      );\r\n    case \"paragraph\":\r\n      return (\r\n        <FormItem\r\n          itemCount={itemCount}\r\n          options={[\"content\"]}\r\n          type={\"paragraph\"}\r\n          duplicatedOptions={duplicatedOptions}\r\n          handleOnFormChange={handleOnFormChange}\r\n          itemId={itemId}\r\n        />\r\n      );\r\n    case \"text\":\r\n      return (\r\n        <FormItem\r\n          itemCount={itemCount}\r\n          options={[\"id\", \"label\", \"info\", \"default\"]}\r\n          type=\"text\"\r\n          duplicatedOptions={duplicatedOptions}\r\n          defaultOptions={defaultOptions}\r\n          handleOnFormChange={handleOnFormChange}\r\n          itemId={itemId}\r\n        />\r\n      );\r\n    case \"color\":\r\n      return (\r\n        <FormItem\r\n          itemCount={itemCount}\r\n          options={[\"id\", \"label\", \"info\", \"default\"]}\r\n          type=\"color\"\r\n          duplicatedOptions={duplicatedOptions}\r\n          handleOnFormChange={handleOnFormChange}\r\n          itemId={itemId}\r\n          defaultOptions={{\r\n            default: \"#ffffff\",\r\n          }}\r\n        />\r\n      );\r\n    case \"font_picker\":\r\n      return (\r\n        <FormItem\r\n          itemCount={itemCount}\r\n          options={[\"id\", \"label\", \"info\", \"default\"]}\r\n          type=\"font_picker\"\r\n          duplicatedOptions={duplicatedOptions}\r\n          handleOnFormChange={handleOnFormChange}\r\n          itemId={itemId}\r\n        />\r\n      );\r\n    case \"collection\":\r\n      return (\r\n        <FormItem\r\n          itemCount={itemCount}\r\n          options={[\"id\", \"label\", \"info\"]}\r\n          type=\"collection\"\r\n          duplicatedOptions={duplicatedOptions}\r\n          handleOnFormChange={handleOnFormChange}\r\n          itemId={itemId}\r\n        />\r\n      );\r\n    case \"product\":\r\n      return (\r\n        <FormItem\r\n          itemCount={itemCount}\r\n          options={[\"id\", \"label\", \"info\"]}\r\n          type=\"product\"\r\n          duplicatedOptions={duplicatedOptions}\r\n          handleOnFormChange={handleOnFormChange}\r\n          itemId={itemId}\r\n        />\r\n      );\r\n    case \"blog\":\r\n      return (\r\n        <FormItem\r\n          itemCount={itemCount}\r\n          options={[\"id\", \"label\", \"info\"]}\r\n          type=\"blog\"\r\n          duplicatedOptions={duplicatedOptions}\r\n          handleOnFormChange={handleOnFormChange}\r\n          itemId={itemId}\r\n        />\r\n      );\r\n    case \"page\":\r\n      return (\r\n        <FormItem\r\n          itemCount={itemCount}\r\n          options={[\"id\", \"label\", \"info\"]}\r\n          type=\"page\"\r\n          duplicatedOptions={duplicatedOptions}\r\n          handleOnFormChange={handleOnFormChange}\r\n          itemId={itemId}\r\n        />\r\n      );\r\n    case \"link_list\":\r\n      return (\r\n        <FormItem\r\n          itemCount={itemCount}\r\n          options={[\"id\", \"label\", \"info\"]}\r\n          type=\"link_list\"\r\n          duplicatedOptions={duplicatedOptions}\r\n          handleOnFormChange={handleOnFormChange}\r\n          itemId={itemId}\r\n        />\r\n      );\r\n    case \"url\":\r\n      return (\r\n        <FormItem\r\n          itemCount={itemCount}\r\n          options={[\"id\", \"label\", \"info\"]}\r\n          type=\"url\"\r\n          duplicatedOptions={duplicatedOptions}\r\n          handleOnFormChange={handleOnFormChange}\r\n          itemId={itemId}\r\n        />\r\n      );\r\n    case \"video_url\":\r\n      return (\r\n        <FormItem\r\n          itemCount={itemCount}\r\n          options={[\"id\", \"label\", \"accept\", \"placeholder\", \"info\", \"default\"]}\r\n          type=\"video_url\"\r\n          duplicatedOptions={duplicatedOptions}\r\n          duplicatedOptions={duplicatedOptions}\r\n          handleOnFormChange={handleOnFormChange}\r\n          itemId={itemId}\r\n        />\r\n      );\r\n    case \"richtext\":\r\n      return (\r\n        <FormItem\r\n          itemCount={itemCount}\r\n          options={[\"id\", \"label\", \"info\", \"default\"]}\r\n          type=\"richtext\"\r\n          duplicatedOptions={duplicatedOptions}\r\n          defaultOptions={{\r\n            default: \"<p></p>\",\r\n          }}\r\n          handleOnFormChange={handleOnFormChange}\r\n          itemId={itemId}\r\n        />\r\n      );\r\n\r\n    case \"checkbox\":\r\n      return (\r\n        <FormItem\r\n          itemCount={itemCount}\r\n          options={[\"id\", \"label\", \"info\", \"default\"]}\r\n          type=\"checkbox\"\r\n          duplicatedOptions={duplicatedOptions}\r\n          defaultOptions={{\r\n            default: \"true\",\r\n          }}\r\n          handleOnFormChange={handleOnFormChange}\r\n          itemId={itemId}\r\n        />\r\n      );\r\n\r\n    case \"range\":\r\n      return (\r\n        <FormItem\r\n          itemCount={itemCount}\r\n          options={[\r\n            \"id\",\r\n            \"label\",\r\n            \"min\",\r\n            \"max\",\r\n            \"step\",\r\n            \"unit\",\r\n            \"info\",\r\n            \"default\",\r\n          ]}\r\n          type=\"richtext\"\r\n          duplicatedOptions={duplicatedOptions}\r\n          defaultOptions={{\r\n            unit: \"px\",\r\n          }}\r\n          handleOnFormChange={handleOnFormChange}\r\n          itemId={itemId}\r\n        />\r\n      );\r\n    case \"textarea\":\r\n      return (\r\n        <FormItem\r\n          itemCount={itemCount}\r\n          options={[\"id\", \"label\", \"info\", \"placeholder\", \"default\"]}\r\n          type=\"textarea\"\r\n          duplicatedOptions={duplicatedOptions}\r\n          handleOnFormChange={handleOnFormChange}\r\n          itemId={itemId}\r\n        />\r\n      );\r\n    case \"number\":\r\n      return (\r\n        <FormItem\r\n          itemCount={itemCount}\r\n          options={[\"id\", \"label\", \"info\", \"default\"]}\r\n          type=\"number\"\r\n          duplicatedOptions={duplicatedOptions}\r\n          handleOnFormChange={handleOnFormChange}\r\n          itemId={itemId}\r\n        />\r\n      );\r\n    case \"select\":\r\n      return (\r\n        <FormItem\r\n          itemCount={itemCount}\r\n          options={[\"id\", \"label\", \"info\", \"default\"]}\r\n          subOptions={[\"value\", \"label\"]}\r\n          totalSubOptions={5}\r\n          type=\"select\"\r\n          duplicatedOptions={duplicatedOptions}\r\n          handleOnFormChange={handleOnFormChange}\r\n          itemId={itemId}\r\n        />\r\n      );\r\n    case \"radio\":\r\n      return (\r\n        <FormItem\r\n          itemCount={itemCount}\r\n          options={[\"id\", \"label\", \"info\", \"default\"]}\r\n          subOptions={[\"value\", \"label\"]}\r\n          totalSubOptions={5}\r\n          type=\"radio\"\r\n          duplicatedOptions={duplicatedOptions}\r\n          handleOnFormChange={handleOnFormChange}\r\n          itemId={itemId}\r\n        />\r\n      );\r\n    case \"image_picker\":\r\n      return (\r\n        <FormItem\r\n          itemCount={itemCount}\r\n          options={[\"id\", \"label\", \"info\"]}\r\n          type=\"image_picker\"\r\n          duplicatedOptions={duplicatedOptions}\r\n          handleOnFormChange={handleOnFormChange}\r\n          itemId={itemId}\r\n        />\r\n      );\r\n    default:\r\n      return \"none\";\r\n  }\r\n};\r\n\r\nexport default function Item(props) {\r\n  let {\r\n    defaultValue,\r\n    name,\r\n    type,\r\n    id,\r\n    handleOnFormChange,\r\n    handleOnChange,\r\n    register,\r\n    setValue,\r\n    handleDeleteItem,\r\n    defaultOptions,\r\n    itemCount,\r\n    isToggled,\r\n    handleToggle,\r\n    handleDelete,\r\n    duplicatedOptions,\r\n  } = props;\r\n\r\n  const [items, setItems] = useStickyState(\"@items\");\r\n\r\n  /* TODO \r\n  \"duplicatedItemOptions' sohuld receive the _json data. */\r\n\r\n  const handleDuplicate = async () => {\r\n    /* \"$this\" is modified once \"setItems\" is updated. */\r\n    let $this = document.querySelector(`.item[data-item-count=\"${itemCount}\"]`);\r\n\r\n    let _json = transformDOMIntoJSON($this);\r\n    delete _json.type;\r\n\r\n    /* ====== */\r\n    const index = parseInt(itemCount) - 1;\r\n\r\n    const _item = {\r\n      id: short.generate(),\r\n      type,\r\n      duplicatedOptions: _json,\r\n    };\r\n\r\n    const updatedItems = addToIndex(items, index, _item);\r\n    setItems(updatedItems);\r\n\r\n    generateJSONAndVariables();\r\n  };\r\n\r\n  return (\r\n    <li\r\n      data-item-count={itemCount}\r\n      className={`item ${isToggled ? \"item--toggle\" : \"\"}`}>\r\n      <div className=\"item-wrapper\">\r\n        <select\r\n          onChange={(e) => handleOnChange(e)}\r\n          defaultValue={defaultValue}\r\n          name={name}\r\n          id={id}\r\n          ref={register}>\r\n          {schema\r\n            .sort((a, b) => a.id.localeCompare(b.id))\r\n            .map(({ id: _id }) => {\r\n              return (\r\n                <option key={_id} value={_id}>\r\n                  {_id}\r\n                </option>\r\n              );\r\n            })}\r\n        </select>\r\n        <button\r\n          tabindex=\"-1\"\r\n          onClick={() => handleDeleteItem(id)}\r\n          className=\"item-delete item-button\">\r\n          Delete\r\n        </button>\r\n        <button\r\n          onClick={() => {\r\n            handleDuplicate();\r\n          }}\r\n          className=\"item-button\">\r\n          Dup\r\n        </button>\r\n        <button\r\n          className=\"item-button  item-button--toggle\"\r\n          onClick={(e) => handleToggle(e, id)}>\r\n          {\r\n            <svg\r\n              width={16}\r\n              height={16}\r\n              fill=\"currentColor\"\r\n              className=\"bi bi-chevron-down\"\r\n              viewBox=\"0 0 16 16\">\r\n              <path\r\n                fillRule=\"evenodd\"\r\n                d=\"M1.646 4.646a.5.5 0 0 1 .708 0L8 10.293l5.646-5.647a.5.5 0 0 1 .708.708l-6 6a.5.5 0 0 1-.708 0l-6-6a.5.5 0 0 1 0-.708z\"\r\n              />\r\n            </svg>\r\n          }\r\n        </button>\r\n      </div>\r\n      <div className=\"item-content\">\r\n        {renderElement(\r\n          type,\r\n          id,\r\n          handleOnFormChange,\r\n          itemCount,\r\n          duplicatedOptions,\r\n        )}\r\n      </div>\r\n      <br />\r\n    </li>\r\n  );\r\n}\r\n","D:\\Web Dev\\diegofortes-projects\\shopify-schema-editor\\src\\utils.js",["93"],"export const schema = [\r\n  {\r\n    id: \"header\",\r\n  },\r\n  { id: \"paragraph\" },\r\n  { id: \"text\" },\r\n  { id: \"color\" },\r\n  { id: \"font_picker\" },\r\n  { id: \"collection\" },\r\n  { id: \"product\" },\r\n  { id: \"blog\" },\r\n  { id: \"page\" },\r\n  { id: \"link_list\" },\r\n  { id: \"range\" },\r\n  { id: \"url\" },\r\n  { id: \"video_url\" },\r\n  { id: \"richtext\" },\r\n  { id: \"image_picker\" },\r\n  { id: \"checkbox\" },\r\n  { id: \"textarea\" },\r\n  { id: \"number\" },\r\n  { id: \"select\" },\r\n  { id: \"radio\" },\r\n];\r\n\r\nexport function convertToLiquidVariables(json) {\r\n  let result = [];\r\n  result.push(JSON.parse(json));\r\n\r\n  let variables = [];\r\n  for (var each of result[0]) {\r\n    const id = each.id;\r\n\r\n    if (id) {\r\n      const variable = `{% assign ${id} = section.settings.${id} %}`;\r\n      variables.push(variable);\r\n    }\r\n  }\r\n  return variables.join(\"\\n\");\r\n}\r\n\r\nexport function copyToClipboard(text) {\r\n  if (window.clipboardData && window.clipboardData.setData) {\r\n    // IE specific code path to prevent textarea being shown while dialog is visible.\r\n    return window.clipboardData.setData(\"Text\", text);\r\n  } else if (\r\n    document.queryCommandSupported &&\r\n    document.queryCommandSupported(\"copy\")\r\n  ) {\r\n    var textarea = document.createElement(\"textarea\");\r\n    textarea.textContent = text;\r\n    textarea.style.position = \"fixed\"; // Prevent scrolling to bottom of page in MS Edge.\r\n    document.body.appendChild(textarea);\r\n    textarea.select();\r\n    try {\r\n      return document.execCommand(\"copy\"); // Security exception may be thrown by some browsers.\r\n    } catch (ex) {\r\n      console.warn(\"Copy to clipboard failed.\", ex);\r\n      return false;\r\n    } finally {\r\n      document.body.removeChild(textarea);\r\n    }\r\n  }\r\n}\r\n\r\nexport const updateJSONTextarea = (json) => {\r\n  try {\r\n    const $textarea = window.document.getElementById(`CodeTable-result`);\r\n    $textarea.value = json;\r\n  } catch (err) {\r\n    console.error(\"Couldn't update textarea.\");\r\n  }\r\n};\r\n\r\nexport const focusDropdown = (delay = 50) => {\r\n  setTimeout(() => {\r\n    const $lastItem = document.querySelector(\r\n      `.Creator .item:last-of-type .item-wrapper:nth-child(1) select`,\r\n    );\r\n\r\n    if (!$lastItem) {\r\n      return;\r\n    }\r\n\r\n    $lastItem.focus();\r\n  }, delay);\r\n};\r\n\r\n/* This function retrievers a JSON from a DOM (<select>) node containing labels/inputs. */\r\nexport const transformDOMIntoJSON = (each) => {\r\n  let _json;\r\n  const type = each.querySelector(\"select\").value;\r\n  const $attributes = each.querySelectorAll(`.FormItem-attr`);\r\n  const $suboptions = each.querySelectorAll(`.FormItem-suboption`);\r\n\r\n  _json = {\r\n    type,\r\n  };\r\n\r\n  for (const attribute of $attributes) {\r\n    const name = attribute\r\n      .querySelector(`[data-label-name]`)\r\n      .getAttribute(`data-label-name`);\r\n\r\n    let value = attribute.querySelector(`input`).value;\r\n\r\n    /* If there is no property 'info', ignore */\r\n    if (name === \"info\" && (value === \"\" || !value)) {\r\n      continue;\r\n    }\r\n\r\n    /* If there is no property 'default', ignore */\r\n    if (name === \"default\" && (value === \"\" || !value)) {\r\n      continue;\r\n    }\r\n\r\n    /* If there is no property 'default', ignore */\r\n    if (name === \"placeholder\" && (value === \"\" || !value)) {\r\n      continue;\r\n    }\r\n\r\n    if (type === \"textarea\" && name === \"default\" && value !== \"\") {\r\n      value = value.replace(/\\\\n/g, `\\n`);\r\n    }\r\n\r\n    /* type is \"checkbox\" and there is a \"default\", convert it to boolean */\r\n    if (type === \"checkbox\" && name === \"default\" && value !== \"\") {\r\n      value = value.toLowerCase() === \"true\" ? true : false;\r\n    }\r\n\r\n    /* type is \"range\", convert values to integer */\r\n    if (\r\n      type === \"range\" &&\r\n      value !== \"\" &&\r\n      (name === \"default\" ||\r\n        name === \"min\" ||\r\n        name === \"max\" ||\r\n        name === \"step\")\r\n    ) {\r\n      value = parseInt(value);\r\n    }\r\n\r\n    _json[name] = value;\r\n  }\r\n\r\n  /* If is of type 'select' or 'radio' it contains an array of objects. */\r\n  if (\r\n    (type === \"select\" || type === \"radio\") &&\r\n    $suboptions &&\r\n    $suboptions.length >= 1\r\n  ) {\r\n    let _suboptions = [];\r\n\r\n    for (const suboption of $suboptions) {\r\n      let _suboptionsJSON = {};\r\n\r\n      const $inputs = suboption.querySelectorAll(`input`);\r\n\r\n      [...$inputs].map(($input) => {\r\n        try {\r\n          const labelName = $input.getAttribute(\"label\");\r\n          const value = $input.value;\r\n\r\n          console.log(`{ ${labelName}: ${value} }`);\r\n\r\n          if (value === \"\") {\r\n            _suboptionsJSON = delete _suboptionsJSON[labelName];\r\n            return null;\r\n          }\r\n\r\n          _suboptionsJSON[labelName] = value;\r\n        } catch (err) {}\r\n      });\r\n\r\n      if (typeof _suboptionsJSON !== \"boolean\") {\r\n        _suboptions.push(_suboptionsJSON);\r\n      }\r\n    }\r\n\r\n    _json[\"options\"] = _suboptions;\r\n  }\r\n\r\n  return _json;\r\n};\r\n\r\nexport const generateJSONSchema = () => {\r\n  const $items = window.document.querySelectorAll(`.item`);\r\n\r\n  let finalJSON = [];\r\n\r\n  if (!$items) {\r\n    return;\r\n  }\r\n\r\n  for (const each of $items) {\r\n    const JSON = transformDOMIntoJSON(each);\r\n    finalJSON.push(JSON);\r\n  }\r\n\r\n  const result = JSON.stringify(finalJSON, null, 2);\r\n\r\n  return result;\r\n};\r\n\r\nexport function sleep(ms) {\r\n  return new Promise((resolve) => setTimeout(resolve, ms));\r\n}\r\n\r\nexport function addToIndex(arr, index, newItem) {\r\n  return [...arr.slice(0, index), newItem, ...arr.slice(index)];\r\n}\r\n\r\nexport async function generateJSONAndVariables() {\r\n  const $generator = window.document.getElementById(\"generateJSON\");\r\n\r\n  if ($generator) {\r\n    $generator.click();\r\n    await sleep(25);\r\n    $generator.click();\r\n  }\r\n}\r\n\r\nexport function _extractTextBetween(text, start, end) {\r\n  if (!start || !end) {\r\n    throw new Error(`Please add a \"start\" and \"end\" parameter`);\r\n  }\r\n\r\n  return text.split(start)[1].split(end)[0];\r\n}\r\n","D:\\Web Dev\\diegofortes-projects\\shopify-schema-editor\\src\\components\\ConfirmDialog.js",[],"D:\\Web Dev\\diegofortes-projects\\shopify-schema-editor\\src\\components\\Text.js",["94","95","96","97","98","99","100","101","102"],"import React, { useState, useEffect } from \"react\";\r\n\r\nimport { useForm } from \"react-hook-form\";\r\nimport { useStatePersist as useStickyState } from \"use-state-persist\";\r\n\r\nexport default function Text(props) {\r\n  const { itemId } = props;\r\n\r\n  const initialValues = {\r\n    [itemId + \"_firstname\"]: \"\",\r\n    [itemId + \"_age\"]: \"\",\r\n  };\r\n\r\n  const { register, handleSubmit, watch, errors, setValue } = useForm();\r\n\r\n  const [items, setItems] = useStickyState(\"@items\");\r\n  const [values, setValues] = useStickyState(\"@values\", initialValues);\r\n\r\n  const handleInputChange = (e) => {\r\n    const name = e.target.name;\r\n    const value = e.target.value;\r\n\r\n    setValues({\r\n      ...values,\r\n      [name]: value,\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    console.log(\"initial state\", initialValues);\r\n  }, []);\r\n\r\n  return (\r\n    <fieldset>\r\n      <input\r\n        value={values[itemId + \"_ID\"]}\r\n        onChange={handleInputChange}\r\n        name={`${itemId}_ID`}\r\n        label=\"ID\"\r\n        placeholder=\"\"\r\n      />\r\n      <input\r\n        value={values[itemId + \"_label\"]}\r\n        onChange={handleInputChange}\r\n        name={`${itemId}_label`}\r\n        label=\"label\"\r\n      />\r\n    </fieldset>\r\n  );\r\n}\r\n","D:\\Web Dev\\diegofortes-projects\\shopify-schema-editor\\src\\components\\Form.js",["103","104","105"],"D:\\Web Dev\\diegofortes-projects\\shopify-schema-editor\\src\\components\\BeautifulDND.js",["106","107","108"],"D:\\Web Dev\\diegofortes-projects\\shopify-schema-editor\\src\\components\\FormItem.js",["109","110","111","112","113","114","115","116"],"import React, { useState, useEffect } from \"react\";\r\n\r\nimport { useStatePersist as useStickyState } from \"use-state-persist\";\r\nimport short from \"short-uuid\";\r\nimport \"./FormItem.scss\";\r\nimport {\r\n  generateJSONAndVariables,\r\n  generateJSONSchema,\r\n  updateJSONTextarea,\r\n} from \"../utils\";\r\n\r\nexport default function FormItem(props) {\r\n  const [modified, setModified] = useState(false);\r\n\r\n  let {\r\n    itemId,\r\n    type,\r\n    options,\r\n    duplicatedOptions,\r\n    defaultOptions,\r\n    subOptions,\r\n    totalSubOptions,\r\n    itemCount,\r\n  } = props;\r\n\r\n  let defaultTitle = \"\";\r\n\r\n  // generateJSONAndVariables();\r\n\r\n  if (!defaultOptions || defaultOptions.length <= 0) {\r\n    defaultOptions = \"\";\r\n  }\r\n\r\n  if (duplicatedOptions) {\r\n    defaultOptions = duplicatedOptions;\r\n  }\r\n\r\n  const initialValues = () => {\r\n    let data = {};\r\n\r\n    options.map((e) => {\r\n      const str = `${itemId}_${e}`;\r\n\r\n      return (data[str] = \"\");\r\n    });\r\n\r\n    return data;\r\n  };\r\n\r\n  const [values, setValues] = useStickyState(\"@values\", initialValues());\r\n\r\n  console.log(\"xxx\", defaultOptions[\"id\"]);\r\n\r\n  defaultTitle = defaultOptions[\"id\"];\r\n  if (defaultOptions[\"id\"] !== \"\") {\r\n  }\r\n\r\n  const handleInputChange = (e) => {\r\n    const name = e.target.name;\r\n    const value = e.target.value;\r\n\r\n    setValues({\r\n      ...values,\r\n      [name]: value,\r\n    });\r\n\r\n    setModified(true);\r\n  };\r\n\r\n  const setDefaultValue = (labelName) => {\r\n    if (defaultOptions[labelName]) {\r\n      if (typeof defaultOptions[labelName] !== \"function\") {\r\n        return defaultOptions[labelName];\r\n      } else {\r\n        return defaultOptions[labelName]();\r\n      }\r\n    }\r\n\r\n    return \"\";\r\n  };\r\n\r\n  const setDefaultTitle = () => {\r\n    const characters = values[`${itemId}_id`] && values[`${itemId}_id`].length;\r\n\r\n    if (!characters || characters <= 0) {\r\n      if (modified) {\r\n        return \"\";\r\n      }\r\n\r\n      return setDefaultValue(\"id\");\r\n    }\r\n    return values[`${itemId}_id`] || setDefaultValue(\"id\");\r\n  };\r\n\r\n  return (\r\n    <fieldset className=\"FormItem\">\r\n      {options.map((e, i) => {\r\n        return (\r\n          <React.Fragment>\r\n            {i === 0 && (\r\n              <div className=\"FormItem-title\">{setDefaultTitle()}</div>\r\n            )}\r\n\r\n            <div className=\"FormItem-attr\">\r\n              <label data-label-name={e}>{e}:</label>\r\n              <input\r\n                value={values[`${itemId}_${e}`]}\r\n                onChange={handleInputChange}\r\n                name={`${itemId}_${e}`}\r\n                label={e}\r\n                defaultValue={setDefaultValue(e)}\r\n                placeholder={e}\r\n                autoComplete={\"off\"}\r\n              />\r\n            </div>\r\n          </React.Fragment>\r\n        );\r\n      })}\r\n\r\n      {subOptions && (\r\n        <div className={`FormItem-suboptions`}>\r\n          {[...Array(totalSubOptions)].map((_, i) => {\r\n            var itemIdSuboption = `${itemId}_sub_${i}`;\r\n\r\n            /* Grouping every 3 items into a <div> */\r\n            return subOptions\r\n              .map((each, index) => {\r\n                return (\r\n                  <React.Fragment>\r\n                    <div className=\"FormItem-suboption-item\">\r\n                      <label data-label-name={each}>\r\n                        {each} {i + 1}:\r\n                      </label>\r\n\r\n                      <input\r\n                        value={values[`${itemIdSuboption}_${each}`]}\r\n                        onChange={handleInputChange}\r\n                        name={`${itemIdSuboption}_${each}`}\r\n                        label={each}\r\n                        defaultValue={setDefaultValue(each)}\r\n                        placeholder={each}\r\n                        autoComplete={\"off\"}\r\n                      />\r\n                    </div>\r\n\r\n                    {(index % subOptions.length) - 1 === 0 && (\r\n                      <div className=\"FormItem-suboption-item FormItem-suboption-item--button\">\r\n                        <button>+</button>\r\n                      </div>\r\n                    )}\r\n                  </React.Fragment>\r\n                );\r\n              })\r\n              .reduce(function (r, element, _index) {\r\n                _index % 3 === 0 && r.push([]);\r\n                r[r.length - 1].push(element);\r\n                return r;\r\n              }, [])\r\n              .map(function (rowContent) {\r\n                return <div className=\"FormItem-suboption\">{rowContent}</div>;\r\n              });\r\n          })}\r\n        </div>\r\n      )}\r\n    </fieldset>\r\n  );\r\n}\r\n",["117","118"],"D:\\Web Dev\\diegofortes-projects\\shopify-schema-editor\\src\\components\\CodeTable.js",["119","120","121","122","123","124","125","126"],"import React from \"react\";\r\nimport { useStatePersist as useStickyState } from \"use-state-persist\";\r\nimport {\r\n  convertToLiquidVariables,\r\n  copyToClipboard,\r\n  generateJSONAndVariables,\r\n  _extractTextBetween,\r\n} from \"../utils\";\r\n\r\nimport \"./CodeTable.scss\";\r\nimport useStore from \"./../store/store\";\r\n\r\nexport default function CodeTable() {\r\n  const [items, setItems] = useStickyState(\"@items\");\r\n  const [jsonResult, setJsonResult] = useStickyState(\"@jsonResult\", null);\r\n  const [variablesResult, setVariablesResult] = useStickyState(\r\n    \"@variablesResult\",\r\n    null,\r\n  );\r\n  const [values, setValues] = useStickyState(\"@values\");\r\n\r\n  const format = () => {\r\n    if (!items || !values) {\r\n      return;\r\n    }\r\n    let updated = [];\r\n    items.map((item) => {\r\n      return [...Object.entries(values)].map((_value, i) => {\r\n        const key = _value[0];\r\n        const value = _value[1];\r\n\r\n        if (key.includes(item.id)) {\r\n          let obj = {};\r\n          obj[\"type\"] = item.type;\r\n          obj[key.split(\"_\")[1]] = value;\r\n\r\n          updated.push({\r\n            type: item.type,\r\n          });\r\n        }\r\n      });\r\n    });\r\n\r\n    return updated;\r\n  };\r\n\r\n  const convertSectionToJson = () => {\r\n    const $code = window.document.querySelector(`#sectionCode`);\r\n\r\n    const _code = $code.value;\r\n    const code = _extractTextBetween(_code, `{% schema %}`, `{% endschema %}`);\r\n    const schema = JSON.parse(code).settings;\r\n\r\n    console.log(schema);\r\n  };\r\n\r\n  return (\r\n    <div className=\"CodeTable\">\r\n      <div className=\"CodeTable-wrapper\">\r\n        <textarea\r\n          defaultValue={variablesResult ? variablesResult : \"\"}\r\n          value={variablesResult}\r\n          readOnly={true}\r\n          id=\"CodeTable-variables\"\r\n          cols=\"10\"\r\n          rows=\"10\"></textarea>\r\n\r\n        <div className=\"CodeTable-tables\">\r\n          <textarea\r\n            defaultValue={jsonResult ? jsonResult : \"\"}\r\n            value={jsonResult}\r\n            readOnly={false}\r\n            name=\"\"\r\n            id=\"CodeTable-result\"\r\n            cols=\"30\"\r\n            rows=\"10\"></textarea>\r\n          <div className=\"CodeTable-tables-wrapper\">\r\n            <textarea\r\n              placeholder=\"Paste section code here\"\r\n              defaultValue=\"\"\r\n              name=\"\"\r\n              id=\"sectionCode\"\r\n              cols=\"30\"\r\n              rows=\"10\"></textarea>\r\n            <button\r\n              onClick={() => convertSectionToJson()}\r\n              id=\"convertToJson\"\r\n              className=\"CodeTable-convert\">\r\n              Go\r\n            </button>\r\n          </div>\r\n        </div>\r\n\r\n        <button onClick={() => copyToClipboard(jsonResult)}>\r\n          Copy to clipboard\r\n        </button>\r\n\r\n        <button\r\n          onClick={() => {\r\n            generateJSONAndVariables();\r\n          }}>\r\n          Generate JSON\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","D:\\Web Dev\\diegofortes-projects\\shopify-schema-editor\\src\\store\\store.js",[],{"ruleId":"127","replacedBy":"128"},{"ruleId":"129","replacedBy":"130"},{"ruleId":"131","severity":1,"message":"132","line":1,"column":8,"nodeType":"133","messageId":"134","endLine":1,"endColumn":12},{"ruleId":"131","severity":1,"message":"135","line":3,"column":8,"nodeType":"133","messageId":"134","endLine":3,"endColumn":11},{"ruleId":"136","severity":1,"message":"137","line":16,"column":11,"nodeType":"138","endLine":16,"endColumn":58},{"ruleId":"136","severity":1,"message":"137","line":28,"column":11,"nodeType":"138","endLine":28,"endColumn":63},{"ruleId":"131","severity":1,"message":"139","line":17,"column":35,"nodeType":"133","messageId":"134","endLine":17,"endColumn":40},{"ruleId":"131","severity":1,"message":"140","line":17,"column":42,"nodeType":"133","messageId":"134","endLine":17,"endColumn":48},{"ruleId":"131","severity":1,"message":"141","line":1,"column":28,"nodeType":"133","messageId":"134","endLine":1,"endColumn":36},{"ruleId":"131","severity":1,"message":"142","line":21,"column":8,"nodeType":"133","messageId":"134","endLine":21,"endColumn":21},{"ruleId":"131","severity":1,"message":"143","line":33,"column":31,"nodeType":"133","messageId":"134","endLine":33,"endColumn":43},{"ruleId":"131","severity":1,"message":"139","line":33,"column":45,"nodeType":"133","messageId":"134","endLine":33,"endColumn":50},{"ruleId":"131","severity":1,"message":"140","line":33,"column":52,"nodeType":"133","messageId":"134","endLine":33,"endColumn":58},{"ruleId":"131","severity":1,"message":"144","line":35,"column":10,"nodeType":"133","messageId":"134","endLine":35,"endColumn":25},{"ruleId":"131","severity":1,"message":"145","line":68,"column":9,"nodeType":"133","messageId":"134","endLine":68,"endColumn":22},{"ruleId":"131","severity":1,"message":"141","line":1,"column":17,"nodeType":"133","messageId":"134","endLine":1,"endColumn":25},{"ruleId":"131","severity":1,"message":"146","line":1,"column":27,"nodeType":"133","messageId":"134","endLine":1,"endColumn":36},{"ruleId":"131","severity":1,"message":"147","line":1,"column":38,"nodeType":"133","messageId":"134","endLine":1,"endColumn":44},{"ruleId":"131","severity":1,"message":"148","line":5,"column":3,"nodeType":"133","messageId":"134","endLine":5,"endColumn":8},{"ruleId":"131","severity":1,"message":"149","line":11,"column":8,"nodeType":"133","messageId":"134","endLine":11,"endColumn":19},{"ruleId":"131","severity":1,"message":"150","line":15,"column":8,"nodeType":"133","messageId":"134","endLine":15,"endColumn":12},{"ruleId":"151","severity":1,"message":"152","line":162,"column":11,"nodeType":"153","endLine":162,"endColumn":48},{"ruleId":"131","severity":1,"message":"154","line":293,"column":5,"nodeType":"133","messageId":"134","endLine":293,"endColumn":13},{"ruleId":"131","severity":1,"message":"155","line":295,"column":5,"nodeType":"133","messageId":"134","endLine":295,"endColumn":19},{"ruleId":"131","severity":1,"message":"156","line":299,"column":5,"nodeType":"133","messageId":"134","endLine":299,"endColumn":17},{"ruleId":"157","severity":1,"message":"158","line":159,"column":33,"nodeType":"159","messageId":"160","endLine":159,"endColumn":35},{"ruleId":"131","severity":1,"message":"141","line":1,"column":17,"nodeType":"133","messageId":"134","endLine":1,"endColumn":25},{"ruleId":"131","severity":1,"message":"161","line":14,"column":11,"nodeType":"133","messageId":"134","endLine":14,"endColumn":19},{"ruleId":"131","severity":1,"message":"143","line":14,"column":21,"nodeType":"133","messageId":"134","endLine":14,"endColumn":33},{"ruleId":"131","severity":1,"message":"139","line":14,"column":35,"nodeType":"133","messageId":"134","endLine":14,"endColumn":40},{"ruleId":"131","severity":1,"message":"140","line":14,"column":42,"nodeType":"133","messageId":"134","endLine":14,"endColumn":48},{"ruleId":"131","severity":1,"message":"154","line":14,"column":50,"nodeType":"133","messageId":"134","endLine":14,"endColumn":58},{"ruleId":"131","severity":1,"message":"162","line":16,"column":10,"nodeType":"133","messageId":"134","endLine":16,"endColumn":15},{"ruleId":"131","severity":1,"message":"163","line":16,"column":17,"nodeType":"133","messageId":"134","endLine":16,"endColumn":25},{"ruleId":"164","severity":1,"message":"165","line":31,"column":6,"nodeType":"166","endLine":31,"endColumn":8,"suggestions":"167"},{"ruleId":"131","severity":1,"message":"168","line":1,"column":17,"nodeType":"133","messageId":"134","endLine":1,"endColumn":26},{"ruleId":"131","severity":1,"message":"169","line":2,"column":8,"nodeType":"133","messageId":"134","endLine":2,"endColumn":17},{"ruleId":"131","severity":1,"message":"170","line":25,"column":7,"nodeType":"133","messageId":"134","endLine":25,"endColumn":20},{"ruleId":"131","severity":1,"message":"171","line":3,"column":34,"nodeType":"133","messageId":"134","endLine":3,"endColumn":44},{"ruleId":"131","severity":1,"message":"172","line":4,"column":8,"nodeType":"133","messageId":"134","endLine":4,"endColumn":16},{"ruleId":"131","severity":1,"message":"173","line":27,"column":3,"nodeType":"133","messageId":"134","endLine":27,"endColumn":14},{"ruleId":"131","severity":1,"message":"146","line":1,"column":27,"nodeType":"133","messageId":"134","endLine":1,"endColumn":36},{"ruleId":"131","severity":1,"message":"174","line":4,"column":8,"nodeType":"133","messageId":"134","endLine":4,"endColumn":13},{"ruleId":"131","severity":1,"message":"175","line":7,"column":3,"nodeType":"133","messageId":"134","endLine":7,"endColumn":27},{"ruleId":"131","severity":1,"message":"176","line":8,"column":3,"nodeType":"133","messageId":"134","endLine":8,"endColumn":21},{"ruleId":"131","severity":1,"message":"177","line":9,"column":3,"nodeType":"133","messageId":"134","endLine":9,"endColumn":21},{"ruleId":"131","severity":1,"message":"178","line":17,"column":5,"nodeType":"133","messageId":"134","endLine":17,"endColumn":9},{"ruleId":"131","severity":1,"message":"179","line":23,"column":5,"nodeType":"133","messageId":"134","endLine":23,"endColumn":14},{"ruleId":"131","severity":1,"message":"180","line":54,"column":3,"nodeType":"133","messageId":"134","endLine":54,"endColumn":15},{"ruleId":"127","replacedBy":"181"},{"ruleId":"129","replacedBy":"182"},{"ruleId":"131","severity":1,"message":"183","line":4,"column":3,"nodeType":"133","messageId":"134","endLine":4,"endColumn":27},{"ruleId":"131","severity":1,"message":"184","line":11,"column":8,"nodeType":"133","messageId":"134","endLine":11,"endColumn":16},{"ruleId":"131","severity":1,"message":"163","line":14,"column":17,"nodeType":"133","messageId":"134","endLine":14,"endColumn":25},{"ruleId":"131","severity":1,"message":"185","line":15,"column":22,"nodeType":"133","messageId":"134","endLine":15,"endColumn":35},{"ruleId":"131","severity":1,"message":"186","line":16,"column":27,"nodeType":"133","messageId":"134","endLine":16,"endColumn":45},{"ruleId":"131","severity":1,"message":"187","line":20,"column":18,"nodeType":"133","messageId":"134","endLine":20,"endColumn":27},{"ruleId":"131","severity":1,"message":"188","line":22,"column":9,"nodeType":"133","messageId":"134","endLine":22,"endColumn":15},{"ruleId":"157","severity":1,"message":"189","line":28,"column":58,"nodeType":"159","messageId":"190","endLine":28,"endColumn":60},"no-native-reassign",["191"],"no-negated-in-lhs",["192"],"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","'URL' is defined but never used.","react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener","JSXOpeningElement","'watch' is assigned a value but never used.","'errors' is assigned a value but never used.","'useState' is defined but never used.","'ConfirmDialog' is defined but never used.","'handleSubmit' is assigned a value but never used.","'variablesResult' is assigned a value but never used.","'addCustomItem' is assigned a value but never used.","'useEffect' is defined but never used.","'useRef' is defined but never used.","'sleep' is defined but never used.","'Collapsible' is defined but never used.","'Text' is defined but never used.","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","'setValue' is assigned a value but never used.","'defaultOptions' is assigned a value but never used.","'handleDelete' is assigned a value but never used.","array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","'register' is assigned a value but never used.","'items' is assigned a value but never used.","'setItems' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'initialValues'. Either include it or remove the dependency array.","ArrayExpression",["193"],"'Component' is defined but never used.","'PropTypes' is defined but never used.","'generateItems' is assigned a value but never used.","'Controller' is defined but never used.","'ReactDOM' is defined but never used.","'renderCount' is assigned a value but never used.","'short' is defined but never used.","'generateJSONAndVariables' is defined but never used.","'generateJSONSchema' is defined but never used.","'updateJSONTextarea' is defined but never used.","'type' is assigned a value but never used.","'itemCount' is assigned a value but never used.","'defaultTitle' is assigned a value but never used.",["191"],["192"],"'convertToLiquidVariables' is defined but never used.","'useStore' is defined but never used.","'setJsonResult' is assigned a value but never used.","'setVariablesResult' is assigned a value but never used.","'setValues' is assigned a value but never used.","'format' is assigned a value but never used.","Array.prototype.map() expects a return value from arrow function.","expectedInside","no-global-assign","no-unsafe-negation",{"desc":"194","fix":"195"},"Update the dependencies array to be: [initialValues]",{"range":"196","text":"197"},[804,806],"[initialValues]"]