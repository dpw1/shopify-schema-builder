[{"D:\\Web Dev\\diegofortes-projects\\shopify-schema-editor\\src\\index.js":"1","D:\\Web Dev\\diegofortes-projects\\shopify-schema-editor\\src\\reportWebVitals.js":"2","D:\\Web Dev\\diegofortes-projects\\shopify-schema-editor\\src\\App.js":"3","D:\\Web Dev\\diegofortes-projects\\shopify-schema-editor\\src\\components\\URL.js":"4","D:\\Web Dev\\diegofortes-projects\\shopify-schema-editor\\src\\components\\Creator.js":"5","D:\\Web Dev\\diegofortes-projects\\shopify-schema-editor\\src\\components\\Item.js":"6","D:\\Web Dev\\diegofortes-projects\\shopify-schema-editor\\src\\utils.js":"7","D:\\Web Dev\\diegofortes-projects\\shopify-schema-editor\\src\\components\\ConfirmDialog.js":"8","D:\\Web Dev\\diegofortes-projects\\shopify-schema-editor\\src\\components\\Text.js":"9","D:\\Web Dev\\diegofortes-projects\\shopify-schema-editor\\src\\components\\Form.js":"10","D:\\Web Dev\\diegofortes-projects\\shopify-schema-editor\\src\\components\\BeautifulDND.js":"11","D:\\Web Dev\\diegofortes-projects\\shopify-schema-editor\\src\\components\\FormItem.js":"12","D:\\Web Dev\\diegofortes-projects\\shopify-schema-editor\\src\\components\\CodeTable.js":"13","D:\\Web Dev\\diegofortes-projects\\shopify-schema-editor\\src\\store\\store.js":"14"},{"size":500,"mtime":1609097289308,"results":"15","hashOfConfig":"16"},{"size":362,"mtime":1609097289308,"results":"17","hashOfConfig":"16"},{"size":1109,"mtime":1631478285989,"results":"18","hashOfConfig":"16"},{"size":1814,"mtime":1610523781761,"results":"19","hashOfConfig":"16"},{"size":9300,"mtime":1640001801855,"results":"20","hashOfConfig":"16"},{"size":10843,"mtime":1640001203813,"results":"21","hashOfConfig":"16"},{"size":6181,"mtime":1640001817121,"results":"22","hashOfConfig":"16"},{"size":578,"mtime":1610591212790,"results":"23","hashOfConfig":"16"},{"size":1205,"mtime":1610610816425,"results":"24","hashOfConfig":"16"},{"size":2629,"mtime":1610605810188,"results":"25","hashOfConfig":"26"},{"size":3235,"mtime":1610608948346,"results":"27","hashOfConfig":"26"},{"size":5863,"mtime":1640001809058,"results":"28","hashOfConfig":"16"},{"size":2376,"mtime":1639992454842,"results":"29","hashOfConfig":"16"},{"size":2182,"mtime":1640001169080,"results":"30","hashOfConfig":"16"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},"mwtqj0",{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38","usedDeprecatedRules":"33"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"33"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44","usedDeprecatedRules":"33"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"47","messages":"48","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54","usedDeprecatedRules":"33"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"1jsqa9i",{"filePath":"57","messages":"58","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"59","messages":"60","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"33"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64","usedDeprecatedRules":"33"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\Web Dev\\diegofortes-projects\\shopify-schema-editor\\src\\index.js",[],["67","68"],"D:\\Web Dev\\diegofortes-projects\\shopify-schema-editor\\src\\reportWebVitals.js",[],"D:\\Web Dev\\diegofortes-projects\\shopify-schema-editor\\src\\App.js",["69","70","71","72"],"import logo from \"./logo.svg\";\nimport \"./App.scss\";\nimport URL from \"./components/URL\";\nimport Creator from \"./components/Creator\";\nimport CodeTable from \"./components/CodeTable\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <div className=\"container\">\n        <h1 style={{ textAlign: \"center\", marginBottom: 40 }}>\n          EZFY Shopify Section Creator\n        </h1>\n        <h2 style={{ textAlign: \"center\", marginTop: -30, marginBottom: 40 }}>\n          Coded by{\" \"}\n          <a target=\"_blank\" href=\"https://ezfycode.com\">\n            ezfycode.com.\n          </a>\n        </h2>\n        <h3\n          style={{\n            textAlign: \"center\",\n            fontWeight: \"normal\",\n            marginTop: -30,\n            marginBottom: 60,\n          }}>\n          Copy & paste pre-made sections{\" \"}\n          <a target=\"_blank\" href=\"https://ezfycode.com/shop\">\n            available here\n          </a>\n          .\n        </h3>\n        <div className=\"App-wrapper\">\n          <Creator />\n          <CodeTable></CodeTable>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","D:\\Web Dev\\diegofortes-projects\\shopify-schema-editor\\src\\components\\URL.js",["73","74"],"import React from \"react\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport \"./URL.scss\";\r\nimport short from \"short-uuid\";\r\nimport { sortableContainer, sortableElement } from \"react-sortable-hoc\";\r\nimport arrayMove from \"array-move\";\r\n\r\nimport { useStatePersist as useState } from \"use-state-persist\";\r\n\r\nconst SortableItem = sortableElement(({ value }) => <li>{value}</li>);\r\n\r\nconst SortableContainer = sortableContainer(({ children }) => {\r\n  return <ul>{children}</ul>;\r\n});\r\n\r\nfunction URL() {\r\n  const { register, handleSubmit, watch, errors } = useForm();\r\n  const [items, setItems] = useState(\"@items\", []);\r\n\r\n  const onSortEnd = ({ oldIndex, newIndex }) => {\r\n    setItems(arrayMove(items, oldIndex, newIndex));\r\n  };\r\n\r\n  const onSubmit = (data) => {\r\n    const { url, label, info } = data;\r\n\r\n    const item = {\r\n      type: \"url\",\r\n      url,\r\n      label,\r\n      info,\r\n    };\r\n\r\n    setItems([...items, JSON.stringify(item)]);\r\n  };\r\n\r\n  return (\r\n    <div className=\"shopify-component shopify-component-url\">\r\n      <SortableContainer onSortEnd={onSortEnd}>\r\n        {items.map((value, i) => (\r\n          <SortableItem\r\n            key={`item-${short.generate()}`}\r\n            index={i}\r\n            value={value}\r\n          />\r\n        ))}\r\n      </SortableContainer>\r\n\r\n      <div className=\"container\">\r\n        <form onSubmit={handleSubmit(onSubmit)}>\r\n          <input ref={register} type=\"text\" name=\"id\" placeholder=\"ID\" />\r\n          <input ref={register} type=\"text\" name=\"label\" placeholder=\"URL\" />\r\n          <input\r\n            ref={register}\r\n            type=\"text\"\r\n            name=\"info\"\r\n            placeholder={`\"Choose a link.\"`}\r\n          />\r\n\r\n          <input type=\"submit\" value=\"submit\" />\r\n        </form>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default URL;\r\n","D:\\Web Dev\\diegofortes-projects\\shopify-schema-editor\\src\\components\\Creator.js",["75","76","77","78","79","80","81","82"],"import React, { useEffect, useState } from \"react\";\r\nimport short from \"short-uuid\";\r\nimport { sortableContainer, sortableElement } from \"react-sortable-hoc\";\r\nimport arrayMove from \"array-move\";\r\n\r\nimport { useForm } from \"react-hook-form\";\r\n\r\nimport \"./Creator.scss\";\r\nimport {\r\n  schema,\r\n  updateJSONDOM,\r\n  generateJSONSchema,\r\n  focusDropdown,\r\n  sleep,\r\n  convertToLiquidVariables,\r\n  generateJSONAndVariables,\r\n} from \"./../utils\";\r\n\r\nimport ConfirmDialog from \"./ConfirmDialog\";\r\nimport Item from \"./Item\";\r\nimport useStore from \"../store/store\";\r\n\r\nconst SortableItem = sortableElement(({ value }) => (\r\n  <React.Fragment>{value}</React.Fragment>\r\n));\r\n\r\nconst SortableContainer = sortableContainer(({ children }) => {\r\n  return <ul>{children}</ul>;\r\n});\r\n\r\nexport default function Creator() {\r\n  const { register, setValue, handleSubmit, watch, errors } = useForm();\r\n\r\n  const items = useStore((state) => state.items);\r\n  const addItems = useStore((state) => state.addItems);\r\n  const addItem = useStore((state) => state.addItem);\r\n  const updateItems = useStore((state) => state.updateItems);\r\n\r\n  const jsonResult = useStore((state) => state.jsonResult);\r\n  const updateJsonResult = useStore((state) => state.updateJsonResult);\r\n\r\n  const variablesResult = useStore((state) => state.variablesResult);\r\n  const updateVariablesResult = useStore(\r\n    (state) => state.updateVariablesResult,\r\n  );\r\n\r\n  const handleUpdateTextarea = async () => {\r\n    await sleep(10);\r\n    const json = generateJSONSchema();\r\n    updateJSONDOM(json);\r\n    updateJsonResult(json);\r\n  };\r\n\r\n  const handleAddItem = async () => {\r\n    /* All available par<<ameters can be found as the props for FormItem.js */\r\n\r\n    const id = short.generate();\r\n\r\n    addItem(\r\n      ...[\r\n        {\r\n          id,\r\n          type: \"text\",\r\n        },\r\n      ],\r\n    );\r\n  };\r\n\r\n  const addCustomItem = async () => {\r\n    var test = [\r\n      {\r\n        type: \"select\",\r\n        id: \"section_height\",\r\n        label: \"Desktop height\",\r\n        default: \"650px\",\r\n        options: [\r\n          {\r\n            label: \"Auto\",\r\n            value: \"natural\",\r\n          },\r\n          {\r\n            label: \"450px\",\r\n            value: \"450px\",\r\n          },\r\n          {\r\n            label: \"550px\",\r\n            value: \"550px\",\r\n          },\r\n          {\r\n            label: \"650px\",\r\n            value: \"650px\",\r\n          },\r\n          {\r\n            label: \"750px\",\r\n            value: \"750px\",\r\n          },\r\n          {\r\n            label: \"Full screen\",\r\n            value: \"100vh\",\r\n          },\r\n        ],\r\n      },\r\n      {\r\n        type: \"select\",\r\n        id: \"section_height_mobile\",\r\n        label: \"Mobile height\",\r\n        default: \"auto\",\r\n        info: 'For \"bars\" please ensure you have a maximum of 5 slides.',\r\n        options: [\r\n          {\r\n            label: \"Auto\",\r\n            value: \"auto\",\r\n          },\r\n          {\r\n            label: \"250px\",\r\n            value: \"250px\",\r\n          },\r\n          {\r\n            label: \"300px\",\r\n            value: \"300px\",\r\n          },\r\n          {\r\n            label: \"400px\",\r\n            value: \"400px\",\r\n          },\r\n          {\r\n            label: \"500px\",\r\n            value: \"500px\",\r\n          },\r\n          {\r\n            label: \"Full screen\",\r\n            value: \"100vh\",\r\n          },\r\n        ],\r\n      },\r\n      {\r\n        type: \"checkbox\",\r\n        id: \"full_width_images\",\r\n        label: \"Full width images\",\r\n        info: 'Images that won\\'t cut off. This will overwrite the \"Desktop height\". Recommended size: 1440 x 810px',\r\n        default: false,\r\n      },\r\n      {\r\n        type: \"checkbox\",\r\n        id: \"full_width_images_mobile\",\r\n        label: \"Full width images (mobile)\",\r\n        info: 'Images that won\\'t cut off. This will overwrite the \"Mobile height\". Recommended size: 800 x 800px',\r\n        default: false,\r\n      },\r\n\r\n      {\r\n        type: \"checkbox\",\r\n        id: \"parallax\",\r\n        label: \"Enable parallax\",\r\n        info: 'Parallax may zoom in some images, making them look \"cut off\".',\r\n        default: false,\r\n      },\r\n      {\r\n        type: \"checkbox\",\r\n        id: \"parallax_mobile\",\r\n        label: \"Enable parallax (mobile)\",\r\n        info: 'Parallax may zoom in some images, making them look \"cut off\".',\r\n        default: false,\r\n      },\r\n      {\r\n        type: \"select\",\r\n        id: \"section_height_mobile\",\r\n        label: \"Mobile height\",\r\n        default: \"auto\",\r\n        info: 'For \"bars\" please ensure you have a maximum of 5 slides.',\r\n        options: [\r\n          {\r\n            label: \"Auto\",\r\n            value: \"auto\",\r\n          },\r\n          {\r\n            label: \"250px\",\r\n            value: \"250px\",\r\n          },\r\n          {\r\n            label: \"300px\",\r\n            value: \"300px\",\r\n          },\r\n          {\r\n            label: \"400px\",\r\n            value: \"400px\",\r\n          },\r\n          {\r\n            label: \"500px\",\r\n            value: \"500px\",\r\n          },\r\n          {\r\n            label: \"Full screen\",\r\n            value: \"100vh\",\r\n          },\r\n        ],\r\n      },\r\n    ];\r\n\r\n    var op = test.map((e) => {\r\n      var object = { ...e };\r\n\r\n      delete object.type;\r\n      // delete object.options;\r\n\r\n      return {\r\n        id: short.generate(),\r\n        type: e.type,\r\n\r\n        duplicatedOptions: {\r\n          ...object,\r\n        },\r\n        duplicatedSubOptions: e.options,\r\n      };\r\n    });\r\n\r\n    console.log(\"mmm updated: \", op);\r\n    addItems(op);\r\n  };\r\n\r\n  const handleDeleteItem = (id) => {\r\n    const updated = [...items].filter((e) => e.id !== id);\r\n\r\n    updateItems(updated);\r\n    handleUpdateTextarea();\r\n    generateJSONAndVariables();\r\n  };\r\n\r\n  const handleOnChange = (e) => {\r\n    const { value: type } = e.target;\r\n\r\n    const id = e.target.getAttribute(\"id\");\r\n\r\n    let updated = [\r\n      ...items.map((e) => {\r\n        if (e.id === id) {\r\n          e.type = type;\r\n        }\r\n\r\n        return e;\r\n      }),\r\n    ];\r\n\r\n    updateItems(updated);\r\n\r\n    handleUpdateTextarea();\r\n\r\n    const num = e.target.closest(`.item`).getAttribute(\"data-item-count\");\r\n    focusFirstInputWhenDropdownChanges(num);\r\n    generateJSONAndVariables();\r\n  };\r\n\r\n  const focusFirstInputWhenDropdownChanges = (num) => {\r\n    setTimeout(() => {\r\n      const $el = document.querySelector(\r\n        `[data-item-count*='${num}'] .FormItem-attr:nth-child(1) input`,\r\n      );\r\n\r\n      if (!$el) {\r\n        return;\r\n      }\r\n\r\n      $el.focus();\r\n    }, 50);\r\n\r\n    generateJSONAndVariables();\r\n  };\r\n\r\n  const onSortEnd = ({ oldIndex, newIndex }) => {\r\n    updateItems(arrayMove(items, oldIndex, newIndex));\r\n\r\n    handleUpdateTextarea();\r\n    generateJSONAndVariables();\r\n  };\r\n\r\n  const handleToggle = (e, id) => {\r\n    let updated = [\r\n      ...items.map((e) => {\r\n        if (e.id === id) {\r\n          e.isToggled = !e.isToggled;\r\n        }\r\n\r\n        return e;\r\n      }),\r\n    ];\r\n\r\n    updateItems(updated);\r\n  };\r\n\r\n  // useEffect(() => {\r\n  //   localStorage.clear();\r\n  // }, []);\r\n\r\n  // useEffect(() => {\r\n  //   console.log(\"ec\", items);\r\n  // }, [items]);\r\n\r\n  // useEffect(() => {\r\n  //   console.log(\"look at me values\", values);\r\n  //   const json = generateJSONSchema();\r\n\r\n  //   console.log(\"xd json\", json);\r\n  // }, [values]);\r\n\r\n  /* This function is responsible for generating the JSON and Liquid. \r\n  Its only purpose is to make the function \"generateJSONAndVariables\" from utils.js to work. */\r\n  const generateJSON = async () => {\r\n    handleUpdateTextarea();\r\n\r\n    const variables = convertToLiquidVariables(jsonResult);\r\n\r\n    await sleep(50);\r\n    updateVariablesResult(variables);\r\n  };\r\n\r\n  return (\r\n    <div className=\"Creator\">\r\n      <SortableContainer onSortEnd={onSortEnd}>\r\n        {items.map((props, i) => {\r\n          console.log(\"item props: \", props);\r\n          return (\r\n            <SortableItem\r\n              key={`item-${short.generate()}`}\r\n              index={i}\r\n              value={\r\n                <Item\r\n                  duplicatedOptions={props.duplicatedOptions}\r\n                  duplicatedSubOptions={props.duplicatedSubOptions}\r\n                  isToggled={props.isToggled}\r\n                  Content={props.content}\r\n                  register={register}\r\n                  setValue={setValue}\r\n                  schema={schema}\r\n                  handleOnChange={handleOnChange}\r\n                  id={props.id}\r\n                  type={props.type}\r\n                  handleToggle={handleToggle}\r\n                  handleDeleteItem={handleDeleteItem}\r\n                  itemCount={`${i + 1}`}\r\n                  defaultValue={props.type}\r\n                  name={`name-${i}`}></Item>\r\n              }\r\n            />\r\n          );\r\n        })}\r\n      </SortableContainer>\r\n\r\n      <fieldset>\r\n        <button className=\"Creator-add\" onClick={() => handleAddItem()}>\r\n          Add\r\n        </button>\r\n        <button\r\n          disabled={true}\r\n          className=\"Creator-test\"\r\n          onClick={async () => {\r\n            addCustomItem();\r\n          }}>\r\n          Test\r\n        </button>\r\n        <button\r\n          id=\"generateJSON\"\r\n          onClick={async () => {\r\n            generateJSON();\r\n          }}>\r\n          Generate JSON\r\n        </button>\r\n      </fieldset>\r\n    </div>\r\n  );\r\n}\r\n","D:\\Web Dev\\diegofortes-projects\\shopify-schema-editor\\src\\components\\Item.js",["83","84","85","86","87","88","89","90","91","92","93"],"D:\\Web Dev\\diegofortes-projects\\shopify-schema-editor\\src\\utils.js",["94","95"],"export const schema = [\r\n  {\r\n    id: \"header\",\r\n  },\r\n  { id: \"paragraph\" },\r\n  { id: \"text\" },\r\n  { id: \"color\" },\r\n  { id: \"font_picker\" },\r\n  { id: \"collection\" },\r\n  { id: \"product\" },\r\n  { id: \"blog\" },\r\n  { id: \"page\" },\r\n  { id: \"link_list\" },\r\n  { id: \"range\" },\r\n  { id: \"url\" },\r\n  { id: \"video_url\" },\r\n  { id: \"richtext\" },\r\n  { id: \"image_picker\" },\r\n  { id: \"checkbox\" },\r\n  { id: \"textarea\" },\r\n  { id: \"number\" },\r\n  { id: \"select\" },\r\n  { id: \"radio\" },\r\n];\r\n\r\nexport function convertToLiquidVariables(json) {\r\n  let result = [];\r\n  result.push(JSON.parse(json));\r\n\r\n  let variables = [];\r\n  for (var each of result[0]) {\r\n    const id = each.id;\r\n\r\n    if (id) {\r\n      const variable = `{% assign ${id} = section.settings.${id} %}`;\r\n      variables.push(variable);\r\n    }\r\n  }\r\n\r\n  return variables.join(\"\\n\");\r\n}\r\n\r\nexport function updateLiquidVariablesDOM(variables) {\r\n  const $textarea = document.querySelector(`#CodeTable-variables`);\r\n\r\n  if (!$textarea) {\r\n    return;\r\n  }\r\n\r\n  $textarea.value = variables;\r\n}\r\n\r\nexport function copyToClipboard(text) {\r\n  if (window.clipboardData && window.clipboardData.setData) {\r\n    // IE specific code path to prevent textarea being shown while dialog is visible.\r\n    return window.clipboardData.setData(\"Text\", text);\r\n  } else if (\r\n    document.queryCommandSupported &&\r\n    document.queryCommandSupported(\"copy\")\r\n  ) {\r\n    var textarea = document.createElement(\"textarea\");\r\n    textarea.textContent = text;\r\n    textarea.style.position = \"fixed\"; // Prevent scrolling to bottom of page in MS Edge.\r\n    document.body.appendChild(textarea);\r\n    textarea.select();\r\n    try {\r\n      return document.execCommand(\"copy\"); // Security exception may be thrown by some browsers.\r\n    } catch (ex) {\r\n      console.warn(\"Copy to clipboard failed.\", ex);\r\n      return false;\r\n    } finally {\r\n      document.body.removeChild(textarea);\r\n    }\r\n  }\r\n}\r\n\r\nexport const updateJSONDOM = (json) => {\r\n  try {\r\n    const $textarea = window.document.getElementById(`CodeTable-result`);\r\n    $textarea.value = json;\r\n  } catch (err) {\r\n    console.error(\"Couldn't update textarea.\");\r\n  }\r\n};\r\n\r\nexport const focusDropdown = (delay = 50) => {\r\n  setTimeout(() => {\r\n    const $lastItem = document.querySelector(\r\n      `.Creator .item:last-of-type .item-wrapper:nth-child(1) select`,\r\n    );\r\n\r\n    if (!$lastItem) {\r\n      return;\r\n    }\r\n\r\n    $lastItem.focus();\r\n  }, delay);\r\n};\r\n\r\n/* This function retrieves a JSON from a DOM (<select>) node containing labels/inputs. */\r\nexport const transformDOMIntoJSON = (each) => {\r\n  let _json;\r\n  const type = each.querySelector(\"select\").value;\r\n  const $attributes = each.querySelectorAll(`.FormItem-attr`);\r\n  const $suboptions = each.querySelectorAll(`.FormItem-suboption`);\r\n\r\n  _json = {\r\n    type,\r\n  };\r\n\r\n  for (const attribute of $attributes) {\r\n    const name = attribute\r\n      .querySelector(`[data-label-name]`)\r\n      .getAttribute(`data-label-name`);\r\n\r\n    let value = attribute.querySelector(`input`).value;\r\n\r\n    /* If there is no property 'info', ignore */\r\n    if (name === \"info\" && (value === \"\" || !value)) {\r\n      continue;\r\n    }\r\n\r\n    /* If there is no property 'default', ignore */\r\n    if (name === \"default\" && (value === \"\" || !value)) {\r\n      continue;\r\n    }\r\n\r\n    /* If there is no property 'default', ignore */\r\n    if (name === \"placeholder\" && (value === \"\" || !value)) {\r\n      continue;\r\n    }\r\n\r\n    /* If this is a 'textarea', replace all line breaks for liquid-friendly line breaks */\r\n    if (type === \"textarea\" && name === \"default\" && value !== \"\") {\r\n      value = value.replace(/\\\\n/g, `\\n`);\r\n    }\r\n\r\n    /* type is \"checkbox\" and there is a \"default\", convert it to boolean */\r\n    if (type === \"checkbox\" && name === \"default\" && value !== \"\") {\r\n      value = value.toLowerCase() === \"true\" ? true : false;\r\n    }\r\n\r\n    /* type is \"range\", convert values to integer */\r\n    if (\r\n      type === \"range\" &&\r\n      value !== \"\" &&\r\n      (name === \"default\" ||\r\n        name === \"min\" ||\r\n        name === \"max\" ||\r\n        name === \"step\")\r\n    ) {\r\n      value = parseInt(value);\r\n    }\r\n\r\n    _json[name] = value;\r\n  }\r\n\r\n  /* If is of type 'select' or 'radio' it contains an array of objects. */\r\n  if (\r\n    (type === \"select\" || type === \"radio\") &&\r\n    $suboptions &&\r\n    $suboptions.length >= 1\r\n  ) {\r\n    let _suboptions = [];\r\n\r\n    for (const suboption of $suboptions) {\r\n      let _suboptionsJSON = {};\r\n\r\n      /* Getting all the sub options available. */\r\n      const $inputs = suboption.querySelectorAll(`input`);\r\n\r\n      [...$inputs].map(($input) => {\r\n        try {\r\n          const labelName = $input.getAttribute(\"label\");\r\n          const value = $input.value;\r\n\r\n          if (value === \"\") {\r\n            _suboptionsJSON = delete _suboptionsJSON[labelName];\r\n            return null;\r\n          }\r\n\r\n          _suboptionsJSON[labelName] = value;\r\n        } catch (err) {}\r\n      });\r\n\r\n      if (typeof _suboptionsJSON !== \"boolean\") {\r\n        _suboptions.push(_suboptionsJSON);\r\n      }\r\n    }\r\n\r\n    _json[\"options\"] = _suboptions;\r\n  }\r\n\r\n  return _json;\r\n};\r\n\r\nexport const generateJSONSchema = () => {\r\n  const $items = window.document.querySelectorAll(`.item`);\r\n\r\n  let finalJSON = [];\r\n\r\n  if (!$items) {\r\n    return;\r\n  }\r\n\r\n  for (const each of $items) {\r\n    const JSON = transformDOMIntoJSON(each);\r\n    finalJSON.push(JSON);\r\n  }\r\n\r\n  const result = JSON.stringify(finalJSON, null, 2);\r\n\r\n  return result;\r\n};\r\n\r\nexport function sleep(ms) {\r\n  return new Promise((resolve) => setTimeout(resolve, ms));\r\n}\r\n\r\nexport function addToIndex(arr, index, newItem) {\r\n  return [...arr.slice(0, index), newItem, ...arr.slice(index)];\r\n}\r\n\r\nexport async function generateJSONAndVariables() {\r\n  return;\r\n  const $generator = window.document.getElementById(\"generateJSON\");\r\n\r\n  if ($generator) {\r\n    $generator.click();\r\n    // await sleep(25);\r\n    // $generator.click();\r\n  }\r\n}\r\n\r\nexport function _extractTextBetween(text, start, end) {\r\n  if (!start || !end) {\r\n    throw new Error(`Please add a \"start\" and \"end\" parameter`);\r\n  }\r\n\r\n  return text.split(start)[1].split(end)[0];\r\n}\r\n","D:\\Web Dev\\diegofortes-projects\\shopify-schema-editor\\src\\components\\ConfirmDialog.js",[],"D:\\Web Dev\\diegofortes-projects\\shopify-schema-editor\\src\\components\\Text.js",["96","97","98","99","100","101","102","103","104"],"import React, { useState, useEffect } from \"react\";\r\n\r\nimport { useForm } from \"react-hook-form\";\r\nimport { useStatePersist as useStickyState } from \"use-state-persist\";\r\n\r\nexport default function Text(props) {\r\n  const { itemId } = props;\r\n\r\n  const initialValues = {\r\n    [itemId + \"_firstname\"]: \"\",\r\n    [itemId + \"_age\"]: \"\",\r\n  };\r\n\r\n  const { register, handleSubmit, watch, errors, setValue } = useForm();\r\n\r\n  const [items, setItems] = useStickyState(\"@items\");\r\n  const [values, setValues] = useStickyState(\"@values\", initialValues);\r\n\r\n  const handleInputChange = (e) => {\r\n    const name = e.target.name;\r\n    const value = e.target.value;\r\n\r\n    setValues({\r\n      ...values,\r\n      [name]: value,\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    console.log(\"initial state\", initialValues);\r\n  }, []);\r\n\r\n  return (\r\n    <fieldset>\r\n      <input\r\n        value={values[itemId + \"_ID\"]}\r\n        onChange={handleInputChange}\r\n        name={`${itemId}_ID`}\r\n        label=\"ID\"\r\n        placeholder=\"\"\r\n      />\r\n      <input\r\n        value={values[itemId + \"_label\"]}\r\n        onChange={handleInputChange}\r\n        name={`${itemId}_label`}\r\n        label=\"label\"\r\n      />\r\n    </fieldset>\r\n  );\r\n}\r\n","D:\\Web Dev\\diegofortes-projects\\shopify-schema-editor\\src\\components\\Form.js",["105","106","107"],"D:\\Web Dev\\diegofortes-projects\\shopify-schema-editor\\src\\components\\BeautifulDND.js",["108","109","110"],"D:\\Web Dev\\diegofortes-projects\\shopify-schema-editor\\src\\components\\FormItem.js",["111","112","113","114","115","116","117","118","119","120"],"import React, { useState, useEffect, useRef } from \"react\";\r\n\r\nimport { useStatePersist as useStickyState } from \"use-state-persist\";\r\nimport short from \"short-uuid\";\r\nimport \"./FormItem.scss\";\r\nimport {\r\n  convertToLiquidVariables,\r\n  generateJSONAndVariables,\r\n  sleep,\r\n  updateJSONDOM,\r\n  updateLiquidVariablesDOM,\r\n} from \"../utils\";\r\nimport useStore from \"../store/store\";\r\nimport { generateJSONSchema } from \"./../utils\";\r\n\r\nexport default function FormItem(props) {\r\n  const [modified, setModified] = useState(false);\r\n  const variables = useStore((state) => state.variables);\r\n\r\n  const values = useStore((state) => state.values);\r\n  const addValues = useStore((state) => state.addValues);\r\n\r\n  let {\r\n    itemId,\r\n    type,\r\n    options,\r\n    duplicatedOptions,\r\n    duplicatedSubOptions,\r\n    defaultOptions,\r\n    subOptions,\r\n    totalSubOptions,\r\n    itemCount,\r\n  } = props;\r\n\r\n  // generateJSONAndVariables();\r\n\r\n  if (duplicatedSubOptions && duplicatedSubOptions.length > 5) {\r\n    totalSubOptions = duplicatedSubOptions.length;\r\n  }\r\n\r\n  if (!defaultOptions || defaultOptions.length <= 0) {\r\n    defaultOptions = \"\";\r\n  }\r\n\r\n  if (duplicatedOptions) {\r\n    defaultOptions = duplicatedOptions;\r\n  }\r\n\r\n  const initialValues = () => {\r\n    let data = {};\r\n\r\n    options.map((e) => {\r\n      const str = `${itemId}_${e}`;\r\n\r\n      return (data[str] = \"\");\r\n    });\r\n\r\n    return data;\r\n  };\r\n\r\n  // const [values, setValues] = useStickyState(\"@values\", initialValues());\r\n\r\n  const handleInputChange = (e) => {\r\n    const name = e.target.name;\r\n    const value = e.target.value;\r\n\r\n    addValues({\r\n      ...values,\r\n      [name]: value,\r\n    });\r\n\r\n    console.log(\"input change\");\r\n\r\n    setModified(true);\r\n  };\r\n\r\n  const setDefaultValue = (labelName) => {\r\n    if (defaultOptions[labelName]) {\r\n      if (typeof defaultOptions[labelName] !== \"function\") {\r\n        return defaultOptions[labelName];\r\n      } else {\r\n        return defaultOptions[labelName]();\r\n      }\r\n    }\r\n\r\n    return \"\";\r\n  };\r\n\r\n  const setItemsTitle = () => {\r\n    const characters = values[`${itemId}_id`] && values[`${itemId}_id`].length;\r\n\r\n    console.log(\"charac\", characters);\r\n\r\n    if (!characters || characters <= 0) {\r\n      if (modified) {\r\n        return \"\";\r\n      }\r\n\r\n      return setDefaultValue(\"id\");\r\n    }\r\n    return values[`${itemId}_id`] || setDefaultValue(\"id\");\r\n  };\r\n\r\n  const forceInputInitiation = async () => {\r\n    await sleep(50);\r\n\r\n    const $elements = document.querySelectorAll(`.FormItem input`);\r\n\r\n    for (var each of $elements) {\r\n      const name = each.name;\r\n      const value = each.value;\r\n\r\n      console.log(`ec, [${name}]: ${value}`);\r\n      addValues({\r\n        [name]: value,\r\n      });\r\n    }\r\n  };\r\n\r\n  const updateJSONAndVariables = () => {\r\n    console.log(\"look at me values\", values);\r\n\r\n    const json = generateJSONSchema();\r\n    const variables = convertToLiquidVariables(json);\r\n\r\n    updateJSONDOM(json);\r\n    updateLiquidVariablesDOM(variables);\r\n  };\r\n\r\n  useEffect(() => {\r\n    forceInputInitiation();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    updateJSONAndVariables();\r\n  }, [values]);\r\n\r\n  return (\r\n    <fieldset className=\"FormItem\">\r\n      {options.map((e, i) => {\r\n        return (\r\n          <React.Fragment>\r\n            {i === 0 && <div className=\"FormItem-title\">{setItemsTitle()}</div>}\r\n\r\n            <div className=\"FormItem-attr\">\r\n              <label data-label-name={e}>{e}:</label>\r\n              <input\r\n                value={values[`${itemId}_${e}`]}\r\n                onChange={handleInputChange}\r\n                name={`${itemId}_${e}`}\r\n                label={e}\r\n                defaultValue={setDefaultValue(e)}\r\n                placeholder={e}\r\n                autoComplete={\"off\"}\r\n              />\r\n            </div>\r\n          </React.Fragment>\r\n        );\r\n      })}\r\n\r\n      {subOptions && (\r\n        <div className={`FormItem-suboptions`}>\r\n          {[...Array(totalSubOptions)].map((_, i) => {\r\n            var itemIdSuboption = `${itemId}_sub_${i}`;\r\n\r\n            /* Grouping every 3 items into a <div>.\r\n            This is where the \"select\" and \"radio\" items are rendered. */\r\n            return subOptions\r\n              .map((each, index) => {\r\n                return (\r\n                  <React.Fragment>\r\n                    <div className=\"FormItem-suboption-item\">\r\n                      <label data-label-name={each}>\r\n                        {each} {i + 1}:\r\n                      </label>\r\n\r\n                      <input\r\n                        value={values[`${itemIdSuboption}_${each}`]}\r\n                        onChange={handleInputChange}\r\n                        name={`${itemIdSuboption}_${each}`}\r\n                        label={each}\r\n                        defaultValue={\r\n                          duplicatedSubOptions.length >= 1\r\n                            ? duplicatedSubOptions[i][each]\r\n                            : \"\"\r\n                        }\r\n                        placeholder={each}\r\n                        autoComplete={\"off\"}\r\n                      />\r\n                    </div>\r\n\r\n                    {(index % subOptions.length) - 1 === 0 && (\r\n                      <div className=\"FormItem-suboption-item FormItem-suboption-item--button\">\r\n                        <button>+</button>\r\n                      </div>\r\n                    )}\r\n                  </React.Fragment>\r\n                );\r\n              })\r\n              .reduce(function (r, element, _index) {\r\n                _index % 3 === 0 && r.push([]);\r\n                r[r.length - 1].push(element);\r\n                return r;\r\n              }, [])\r\n              .map(function (rowContent) {\r\n                return <div className=\"FormItem-suboption\">{rowContent}</div>;\r\n              });\r\n          })}\r\n        </div>\r\n      )}\r\n    </fieldset>\r\n  );\r\n}\r\n","D:\\Web Dev\\diegofortes-projects\\shopify-schema-editor\\src\\components\\CodeTable.js",["121","122"],"import React from \"react\";\r\n\r\nimport {\r\n  convertToLiquidVariables,\r\n  copyToClipboard,\r\n  generateJSONAndVariables,\r\n  _extractTextBetween,\r\n} from \"../utils\";\r\n\r\nimport \"./CodeTable.scss\";\r\nimport useStore from \"./../store/store\";\r\n\r\nexport default function CodeTable() {\r\n  const items = useStore((state) => state.items);\r\n  const jsonResult = useStore((state) => state.jsonResult);\r\n\r\n  const variablesResult = useStore((state) => state.variablesResult);\r\n\r\n  const convertSectionToJson = () => {\r\n    const $code = window.document.querySelector(`#sectionCode`);\r\n\r\n    try {\r\n      const _code = $code.value;\r\n      const code = _extractTextBetween(\r\n        _code,\r\n        `{% schema %}`,\r\n        `{% endschema %}`,\r\n      );\r\n      const schema = JSON.parse(code).settings;\r\n\r\n      console.log(\"my shcema\", schema);\r\n    } catch (err) {\r\n      console.log(\"error in schema: \", err);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"CodeTable\">\r\n      <div className=\"CodeTable-wrapper\">\r\n        <textarea\r\n          defaultValue={variablesResult ? variablesResult : \"\"}\r\n          value={variablesResult ? variablesResult : \"\"}\r\n          readOnly={true}\r\n          id=\"CodeTable-variables\"\r\n          cols=\"10\"\r\n          rows=\"10\"></textarea>\r\n\r\n        <div className=\"CodeTable-tables\">\r\n          <textarea\r\n            defaultValue={jsonResult ? jsonResult : \"\"}\r\n            value={jsonResult ? jsonResult : \"\"}\r\n            readOnly={false}\r\n            name=\"\"\r\n            id=\"CodeTable-result\"\r\n            cols=\"30\"\r\n            rows=\"10\"></textarea>\r\n          <div className=\"CodeTable-tables-wrapper\">\r\n            <textarea\r\n              placeholder=\"Paste section code here\"\r\n              defaultValue=\"\"\r\n              name=\"\"\r\n              id=\"sectionCode\"\r\n              cols=\"30\"\r\n              rows=\"10\"></textarea>\r\n            <button\r\n              onClick={() => convertSectionToJson()}\r\n              id=\"convertToJson\"\r\n              className=\"CodeTable-convert\">\r\n              Go\r\n            </button>\r\n          </div>\r\n        </div>\r\n\r\n        <button onClick={() => copyToClipboard(jsonResult)}>\r\n          Copy to clipboard\r\n        </button>\r\n\r\n        <button\r\n          onClick={() => {\r\n            generateJSONAndVariables();\r\n          }}>\r\n          Generate JSON\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","D:\\Web Dev\\diegofortes-projects\\shopify-schema-editor\\src\\store\\store.js",[],{"ruleId":"123","replacedBy":"124"},{"ruleId":"125","replacedBy":"126"},{"ruleId":"127","severity":1,"message":"128","line":1,"column":8,"nodeType":"129","messageId":"130","endLine":1,"endColumn":12},{"ruleId":"127","severity":1,"message":"131","line":3,"column":8,"nodeType":"129","messageId":"130","endLine":3,"endColumn":11},{"ruleId":"132","severity":1,"message":"133","line":16,"column":11,"nodeType":"134","endLine":16,"endColumn":58},{"ruleId":"132","severity":1,"message":"133","line":28,"column":11,"nodeType":"134","endLine":28,"endColumn":63},{"ruleId":"127","severity":1,"message":"135","line":17,"column":35,"nodeType":"129","messageId":"130","endLine":17,"endColumn":40},{"ruleId":"127","severity":1,"message":"136","line":17,"column":42,"nodeType":"129","messageId":"130","endLine":17,"endColumn":48},{"ruleId":"127","severity":1,"message":"137","line":1,"column":17,"nodeType":"129","messageId":"130","endLine":1,"endColumn":26},{"ruleId":"127","severity":1,"message":"138","line":1,"column":28,"nodeType":"129","messageId":"130","endLine":1,"endColumn":36},{"ruleId":"127","severity":1,"message":"139","line":13,"column":3,"nodeType":"129","messageId":"130","endLine":13,"endColumn":16},{"ruleId":"127","severity":1,"message":"140","line":19,"column":8,"nodeType":"129","messageId":"130","endLine":19,"endColumn":21},{"ruleId":"127","severity":1,"message":"141","line":32,"column":31,"nodeType":"129","messageId":"130","endLine":32,"endColumn":43},{"ruleId":"127","severity":1,"message":"135","line":32,"column":45,"nodeType":"129","messageId":"130","endLine":32,"endColumn":50},{"ruleId":"127","severity":1,"message":"136","line":32,"column":52,"nodeType":"129","messageId":"130","endLine":32,"endColumn":58},{"ruleId":"127","severity":1,"message":"142","line":42,"column":9,"nodeType":"129","messageId":"130","endLine":42,"endColumn":24},{"ruleId":"127","severity":1,"message":"138","line":1,"column":17,"nodeType":"129","messageId":"130","endLine":1,"endColumn":25},{"ruleId":"127","severity":1,"message":"137","line":1,"column":27,"nodeType":"129","messageId":"130","endLine":1,"endColumn":36},{"ruleId":"127","severity":1,"message":"143","line":1,"column":38,"nodeType":"129","messageId":"130","endLine":1,"endColumn":44},{"ruleId":"127","severity":1,"message":"144","line":5,"column":3,"nodeType":"129","messageId":"130","endLine":5,"endColumn":8},{"ruleId":"127","severity":1,"message":"145","line":10,"column":29,"nodeType":"129","messageId":"130","endLine":10,"endColumn":43},{"ruleId":"127","severity":1,"message":"146","line":11,"column":8,"nodeType":"129","messageId":"130","endLine":11,"endColumn":19},{"ruleId":"127","severity":1,"message":"147","line":15,"column":8,"nodeType":"129","messageId":"130","endLine":15,"endColumn":12},{"ruleId":"148","severity":1,"message":"149","line":165,"column":11,"nodeType":"150","endLine":165,"endColumn":48},{"ruleId":"127","severity":1,"message":"151","line":297,"column":5,"nodeType":"129","messageId":"130","endLine":297,"endColumn":13},{"ruleId":"127","severity":1,"message":"152","line":299,"column":5,"nodeType":"129","messageId":"130","endLine":299,"endColumn":19},{"ruleId":"127","severity":1,"message":"153","line":303,"column":5,"nodeType":"129","messageId":"130","endLine":303,"endColumn":17},{"ruleId":"154","severity":1,"message":"155","line":172,"column":33,"nodeType":"156","messageId":"157","endLine":172,"endColumn":35},{"ruleId":"158","severity":1,"message":"159","line":226,"column":3,"nodeType":"160","messageId":"161","endLine":232,"endColumn":4},{"ruleId":"127","severity":1,"message":"138","line":1,"column":17,"nodeType":"129","messageId":"130","endLine":1,"endColumn":25},{"ruleId":"127","severity":1,"message":"162","line":14,"column":11,"nodeType":"129","messageId":"130","endLine":14,"endColumn":19},{"ruleId":"127","severity":1,"message":"141","line":14,"column":21,"nodeType":"129","messageId":"130","endLine":14,"endColumn":33},{"ruleId":"127","severity":1,"message":"135","line":14,"column":35,"nodeType":"129","messageId":"130","endLine":14,"endColumn":40},{"ruleId":"127","severity":1,"message":"136","line":14,"column":42,"nodeType":"129","messageId":"130","endLine":14,"endColumn":48},{"ruleId":"127","severity":1,"message":"151","line":14,"column":50,"nodeType":"129","messageId":"130","endLine":14,"endColumn":58},{"ruleId":"127","severity":1,"message":"163","line":16,"column":10,"nodeType":"129","messageId":"130","endLine":16,"endColumn":15},{"ruleId":"127","severity":1,"message":"164","line":16,"column":17,"nodeType":"129","messageId":"130","endLine":16,"endColumn":25},{"ruleId":"165","severity":1,"message":"166","line":31,"column":6,"nodeType":"167","endLine":31,"endColumn":8,"suggestions":"168"},{"ruleId":"127","severity":1,"message":"169","line":1,"column":17,"nodeType":"129","messageId":"130","endLine":1,"endColumn":26},{"ruleId":"127","severity":1,"message":"170","line":2,"column":8,"nodeType":"129","messageId":"130","endLine":2,"endColumn":17},{"ruleId":"127","severity":1,"message":"171","line":25,"column":7,"nodeType":"129","messageId":"130","endLine":25,"endColumn":20},{"ruleId":"127","severity":1,"message":"172","line":3,"column":34,"nodeType":"129","messageId":"130","endLine":3,"endColumn":44},{"ruleId":"127","severity":1,"message":"173","line":4,"column":8,"nodeType":"129","messageId":"130","endLine":4,"endColumn":16},{"ruleId":"127","severity":1,"message":"174","line":27,"column":3,"nodeType":"129","messageId":"130","endLine":27,"endColumn":14},{"ruleId":"127","severity":1,"message":"143","line":1,"column":38,"nodeType":"129","messageId":"130","endLine":1,"endColumn":44},{"ruleId":"127","severity":1,"message":"145","line":3,"column":29,"nodeType":"129","messageId":"130","endLine":3,"endColumn":43},{"ruleId":"127","severity":1,"message":"175","line":4,"column":8,"nodeType":"129","messageId":"130","endLine":4,"endColumn":13},{"ruleId":"127","severity":1,"message":"176","line":8,"column":3,"nodeType":"129","messageId":"130","endLine":8,"endColumn":27},{"ruleId":"127","severity":1,"message":"177","line":18,"column":9,"nodeType":"129","messageId":"130","endLine":18,"endColumn":18},{"ruleId":"127","severity":1,"message":"178","line":25,"column":5,"nodeType":"129","messageId":"130","endLine":25,"endColumn":9},{"ruleId":"127","severity":1,"message":"179","line":32,"column":5,"nodeType":"129","messageId":"130","endLine":32,"endColumn":14},{"ruleId":"127","severity":1,"message":"180","line":49,"column":9,"nodeType":"129","messageId":"130","endLine":49,"endColumn":22},{"ruleId":"165","severity":1,"message":"181","line":132,"column":6,"nodeType":"167","endLine":132,"endColumn":8,"suggestions":"182"},{"ruleId":"165","severity":1,"message":"183","line":136,"column":6,"nodeType":"167","endLine":136,"endColumn":14,"suggestions":"184"},{"ruleId":"127","severity":1,"message":"185","line":4,"column":3,"nodeType":"129","messageId":"130","endLine":4,"endColumn":27},{"ruleId":"127","severity":1,"message":"163","line":14,"column":9,"nodeType":"129","messageId":"130","endLine":14,"endColumn":14},"no-native-reassign",["186"],"no-negated-in-lhs",["187"],"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","'URL' is defined but never used.","react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener","JSXOpeningElement","'watch' is assigned a value but never used.","'errors' is assigned a value but never used.","'useEffect' is defined but never used.","'useState' is defined but never used.","'focusDropdown' is defined but never used.","'ConfirmDialog' is defined but never used.","'handleSubmit' is assigned a value but never used.","'variablesResult' is assigned a value but never used.","'useRef' is defined but never used.","'sleep' is defined but never used.","'useStickyState' is defined but never used.","'Collapsible' is defined but never used.","'Text' is defined but never used.","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","'setValue' is assigned a value but never used.","'defaultOptions' is assigned a value but never used.","'handleDelete' is assigned a value but never used.","array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","no-unreachable","Unreachable code.","VariableDeclaration","unreachableCode","'register' is assigned a value but never used.","'items' is assigned a value but never used.","'setItems' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'initialValues'. Either include it or remove the dependency array.","ArrayExpression",["188"],"'Component' is defined but never used.","'PropTypes' is defined but never used.","'generateItems' is assigned a value but never used.","'Controller' is defined but never used.","'ReactDOM' is defined but never used.","'renderCount' is assigned a value but never used.","'short' is defined but never used.","'generateJSONAndVariables' is defined but never used.","'variables' is assigned a value but never used.","'type' is assigned a value but never used.","'itemCount' is assigned a value but never used.","'initialValues' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'forceInputInitiation'. Either include it or remove the dependency array.",["189"],"React Hook useEffect has a missing dependency: 'updateJSONAndVariables'. Either include it or remove the dependency array.",["190"],"'convertToLiquidVariables' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"191","fix":"192"},{"desc":"193","fix":"194"},{"desc":"195","fix":"196"},"Update the dependencies array to be: [initialValues]",{"range":"197","text":"198"},"Update the dependencies array to be: [forceInputInitiation]",{"range":"199","text":"200"},"Update the dependencies array to be: [updateJSONAndVariables, values]",{"range":"201","text":"202"},[804,806],"[initialValues]",[3066,3068],"[forceInputInitiation]",[3131,3139],"[updateJSONAndVariables, values]"]