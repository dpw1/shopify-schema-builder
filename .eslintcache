[{"D:\\Web Dev\\diegofortes-projects\\shopify-schema-editor\\src\\index.js":"1","D:\\Web Dev\\diegofortes-projects\\shopify-schema-editor\\src\\reportWebVitals.js":"2","D:\\Web Dev\\diegofortes-projects\\shopify-schema-editor\\src\\App.js":"3","D:\\Web Dev\\diegofortes-projects\\shopify-schema-editor\\src\\components\\URL.js":"4","D:\\Web Dev\\diegofortes-projects\\shopify-schema-editor\\src\\components\\Creator.js":"5","D:\\Web Dev\\diegofortes-projects\\shopify-schema-editor\\src\\components\\Item.js":"6","D:\\Web Dev\\diegofortes-projects\\shopify-schema-editor\\src\\utils.js":"7","D:\\Web Dev\\diegofortes-projects\\shopify-schema-editor\\src\\components\\ConfirmDialog.js":"8","D:\\Web Dev\\diegofortes-projects\\shopify-schema-editor\\src\\components\\Text.js":"9","D:\\Web Dev\\diegofortes-projects\\shopify-schema-editor\\src\\components\\Form.js":"10","D:\\Web Dev\\diegofortes-projects\\shopify-schema-editor\\src\\components\\BeautifulDND.js":"11","D:\\Web Dev\\diegofortes-projects\\shopify-schema-editor\\src\\components\\FormItem.js":"12","D:\\Web Dev\\diegofortes-projects\\shopify-schema-editor\\src\\components\\CodeTable.js":"13","D:\\Web Dev\\diegofortes-projects\\shopify-schema-editor\\src\\store\\store.js":"14"},{"size":500,"mtime":1609097289308,"results":"15","hashOfConfig":"16"},{"size":362,"mtime":1609097289308,"results":"17","hashOfConfig":"16"},{"size":1109,"mtime":1631478285989,"results":"18","hashOfConfig":"16"},{"size":1814,"mtime":1610523781761,"results":"19","hashOfConfig":"16"},{"size":9011,"mtime":1640370129799,"results":"20","hashOfConfig":"16"},{"size":10924,"mtime":1640369527500,"results":"21","hashOfConfig":"16"},{"size":11601,"mtime":1640372872971,"results":"22","hashOfConfig":"16"},{"size":578,"mtime":1610591212790,"results":"23","hashOfConfig":"16"},{"size":1205,"mtime":1610610816425,"results":"24","hashOfConfig":"16"},{"size":2629,"mtime":1610605810188,"results":"25","hashOfConfig":"26"},{"size":3235,"mtime":1610608948346,"results":"27","hashOfConfig":"26"},{"size":6271,"mtime":1640378195870,"results":"28","hashOfConfig":"16"},{"size":6174,"mtime":1640369740888,"results":"29","hashOfConfig":"16"},{"size":2468,"mtime":1640360468251,"results":"30","hashOfConfig":"16"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},"mwtqj0",{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38","usedDeprecatedRules":"33"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"33"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44","usedDeprecatedRules":"33"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"33"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"33"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"33"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"1jsqa9i",{"filePath":"58","messages":"59","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"60","messages":"61","errorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"62","messages":"63","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64","usedDeprecatedRules":"33"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},"D:\\Web Dev\\diegofortes-projects\\shopify-schema-editor\\src\\index.js",[],["67","68"],"D:\\Web Dev\\diegofortes-projects\\shopify-schema-editor\\src\\reportWebVitals.js",[],"D:\\Web Dev\\diegofortes-projects\\shopify-schema-editor\\src\\App.js",["69","70","71","72"],"import logo from \"./logo.svg\";\nimport \"./App.scss\";\nimport URL from \"./components/URL\";\nimport Creator from \"./components/Creator\";\nimport CodeTable from \"./components/CodeTable\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <div className=\"container\">\n        <h1 style={{ textAlign: \"center\", marginBottom: 40 }}>\n          EZFY Shopify Section Creator\n        </h1>\n        <h2 style={{ textAlign: \"center\", marginTop: -30, marginBottom: 40 }}>\n          Coded by{\" \"}\n          <a target=\"_blank\" href=\"https://ezfycode.com\">\n            ezfycode.com.\n          </a>\n        </h2>\n        <h3\n          style={{\n            textAlign: \"center\",\n            fontWeight: \"normal\",\n            marginTop: -30,\n            marginBottom: 60,\n          }}>\n          Copy & paste pre-made sections{\" \"}\n          <a target=\"_blank\" href=\"https://ezfycode.com/shop\">\n            available here\n          </a>\n          .\n        </h3>\n        <div className=\"App-wrapper\">\n          <Creator />\n          <CodeTable></CodeTable>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","D:\\Web Dev\\diegofortes-projects\\shopify-schema-editor\\src\\components\\URL.js",["73","74"],"import React from \"react\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport \"./URL.scss\";\r\nimport short from \"short-uuid\";\r\nimport { sortableContainer, sortableElement } from \"react-sortable-hoc\";\r\nimport arrayMove from \"array-move\";\r\n\r\nimport { useStatePersist as useState } from \"use-state-persist\";\r\n\r\nconst SortableItem = sortableElement(({ value }) => <li>{value}</li>);\r\n\r\nconst SortableContainer = sortableContainer(({ children }) => {\r\n  return <ul>{children}</ul>;\r\n});\r\n\r\nfunction URL() {\r\n  const { register, handleSubmit, watch, errors } = useForm();\r\n  const [items, setItems] = useState(\"@items\", []);\r\n\r\n  const onSortEnd = ({ oldIndex, newIndex }) => {\r\n    setItems(arrayMove(items, oldIndex, newIndex));\r\n  };\r\n\r\n  const onSubmit = (data) => {\r\n    const { url, label, info } = data;\r\n\r\n    const item = {\r\n      type: \"url\",\r\n      url,\r\n      label,\r\n      info,\r\n    };\r\n\r\n    setItems([...items, JSON.stringify(item)]);\r\n  };\r\n\r\n  return (\r\n    <div className=\"shopify-component shopify-component-url\">\r\n      <SortableContainer onSortEnd={onSortEnd}>\r\n        {items.map((value, i) => (\r\n          <SortableItem\r\n            key={`item-${short.generate()}`}\r\n            index={i}\r\n            value={value}\r\n          />\r\n        ))}\r\n      </SortableContainer>\r\n\r\n      <div className=\"container\">\r\n        <form onSubmit={handleSubmit(onSubmit)}>\r\n          <input ref={register} type=\"text\" name=\"id\" placeholder=\"ID\" />\r\n          <input ref={register} type=\"text\" name=\"label\" placeholder=\"URL\" />\r\n          <input\r\n            ref={register}\r\n            type=\"text\"\r\n            name=\"info\"\r\n            placeholder={`\"Choose a link.\"`}\r\n          />\r\n\r\n          <input type=\"submit\" value=\"submit\" />\r\n        </form>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default URL;\r\n","D:\\Web Dev\\diegofortes-projects\\shopify-schema-editor\\src\\components\\Creator.js",["75","76","77","78","79","80","81","82","83","84","85"],"import React, { useEffect, useState } from \"react\";\r\nimport short from \"short-uuid\";\r\nimport { sortableContainer, sortableElement } from \"react-sortable-hoc\";\r\nimport arrayMove from \"array-move\";\r\nimport { useStatePersist as useStickyState } from \"use-state-persist\";\r\n\r\nimport { useForm } from \"react-hook-form\";\r\n\r\nimport \"./Creator.scss\";\r\nimport {\r\n  schema,\r\n  updateJSONDOM,\r\n  generateJSONSchema,\r\n  focusDropdown,\r\n  sleep,\r\n  convertToLiquidVariables,\r\n  generateJSONAndVariables,\r\n  updateJSONAndVariables,\r\n  convertSchemaJSONToItems,\r\n  getJsonResult,\r\n} from \"./../utils\";\r\n\r\nimport ConfirmDialog from \"./ConfirmDialog\";\r\nimport Item from \"./Item\";\r\nimport useStore from \"../store/store\";\r\n\r\nconst SortableItem = sortableElement(({ value }) => (\r\n  <React.Fragment>{value}</React.Fragment>\r\n));\r\n\r\nconst SortableContainer = sortableContainer(({ children }) => {\r\n  return <ul>{children}</ul>;\r\n});\r\n\r\nexport default function Creator() {\r\n  const { register, setValue, handleSubmit, watch, errors } = useForm();\r\n  const [lastChangedInput, setLastChangedInput] = useStickyState(\r\n    \"@lastChangedInput\",\r\n    [],\r\n  );\r\n\r\n  const items = useStore((state) => state.items);\r\n  // const values = useStore((state) => state.values);\r\n\r\n  const addItems = useStore((state) => state.addItems);\r\n  const addItem = useStore((state) => state.addItem);\r\n  const updateItems = useStore((state) => state.updateItems);\r\n\r\n  const jsonResult = useStore((state) => state.jsonResult);\r\n\r\n  const updateVariablesResult = useStore(\r\n    (state) => state.updateVariablesResult,\r\n  );\r\n\r\n  const watchValues = async (state, prevState) => {\r\n    /* To be ablee to get the very first \"previous state\" of the form items, \r\n    we need to check which item was modified.\r\n    \r\n    After that, we can look at the \"values\" state and find its ID\r\n    */\r\n    /* todo: get item being currently modified*/\r\n    // const firstChangeId = Object.keys(state)[0].split(\"_\")[0];\r\n    // const getPreviousId = () => {\r\n    //   try {\r\n    //     const id = items.filter((e) => e.id === firstChangeId)[0]\r\n    //       .duplicatedOptions.id;\r\n    //     return id;\r\n    //   } catch (err) {\r\n    //     return null;\r\n    //   }\r\n    // };\r\n    // const previousId = getPreviousId();\r\n    // let ids = [];\r\n    // let prevIds = [];\r\n    // for (const [key, value] of Object.entries(state)) {\r\n    //   if (/_id/.test(key)) {\r\n    //     ids.push({\r\n    //       id: key,\r\n    //       value,\r\n    //     });\r\n    //   }\r\n    // }\r\n    // for (const [key, value] of Object.entries(prevState)) {\r\n    //   if (/_id/.test(key)) {\r\n    //     prevIds.push({\r\n    //       id: key,\r\n    //       value,\r\n    //     });\r\n    //   }\r\n    // }\r\n    // console.log(\"monkey state/prev\", state, prevState, previousId);\r\n    // console.log(\"monkey last changed: \");\r\n  };\r\n\r\n  // useEffect(() => {\r\n  //   console.log(\"jsss\", getJsonResult());\r\n  // }, [values]);\r\n\r\n  const handleUpdateTextarea = async () => {\r\n    await sleep(10);\r\n    const json = generateJSONSchema();\r\n    updateJSONDOM(json);\r\n  };\r\n\r\n  const handleAddItem = async () => {\r\n    /* All available par<<ameters can be found as the props for FormItem.js */\r\n\r\n    const id = short.generate();\r\n\r\n    addItem(\r\n      ...[\r\n        {\r\n          id,\r\n          type: \"text\",\r\n        },\r\n      ],\r\n    );\r\n  };\r\n\r\n  const addCustomItem = async () => {\r\n    var test = [\r\n      {\r\n        type: \"select\",\r\n        id: \"section_height\",\r\n        label: \"Desktop height\",\r\n        default: \"650px\",\r\n        options: [\r\n          {\r\n            label: \"Auto\",\r\n            value: \"natural\",\r\n          },\r\n          {\r\n            label: \"450px\",\r\n            value: \"450px\",\r\n          },\r\n          {\r\n            label: \"550px\",\r\n            value: \"550px\",\r\n          },\r\n          {\r\n            label: \"650px\",\r\n            value: \"650px\",\r\n          },\r\n          {\r\n            label: \"750px\",\r\n            value: \"750px\",\r\n          },\r\n          {\r\n            label: \"Full screen\",\r\n            value: \"100vh\",\r\n          },\r\n        ],\r\n      },\r\n      {\r\n        type: \"select\",\r\n        id: \"section_height_mobile\",\r\n        label: \"Mobile height\",\r\n        default: \"auto\",\r\n        options: [\r\n          {\r\n            label: \"Auto\",\r\n            value: \"auto\",\r\n          },\r\n          {\r\n            label: \"250px\",\r\n            value: \"250px\",\r\n          },\r\n          {\r\n            label: \"300px\",\r\n            value: \"300px\",\r\n          },\r\n          {\r\n            label: \"400px\",\r\n            value: \"400px\",\r\n          },\r\n          {\r\n            label: \"500px\",\r\n            value: \"500px\",\r\n          },\r\n          {\r\n            label: \"Full screen\",\r\n            value: \"100vh\",\r\n          },\r\n        ],\r\n      },\r\n      {\r\n        type: \"checkbox\",\r\n        id: \"full_width_images\",\r\n        label: \"Full width images\",\r\n        info: 'Images that won\\'t cut off. This will overwrite the \"Desktop height\". Recommended size: 1440 x 810px',\r\n        default: false,\r\n      },\r\n      {\r\n        type: \"checkbox\",\r\n        id: \"full_width_images_mobile\",\r\n        label: \"Full width images (mobile)\",\r\n        info: 'Images that won\\'t cut off. This will overwrite the \"Mobile height\". Recommended size: 800 x 800px',\r\n        default: false,\r\n      },\r\n      {\r\n        type: \"checkbox\",\r\n        id: \"parallax\",\r\n        label: \"Enable parallax\",\r\n        info: 'Parallax may zoom in some images, making them look \"cut off\".',\r\n        default: false,\r\n      },\r\n    ];\r\n\r\n    const op = convertSchemaJSONToItems(test);\r\n    addItems(op);\r\n  };\r\n\r\n  const handleDeleteItem = (id) => {\r\n    const updated = [...items].filter((e) => e.id !== id);\r\n\r\n    updateItems(updated);\r\n    handleUpdateTextarea();\r\n    generateJSONAndVariables();\r\n  };\r\n\r\n  const handleOnChange = (e) => {\r\n    const { value: type } = e.target;\r\n\r\n    const id = e.target.getAttribute(\"id\");\r\n\r\n    let updated = [\r\n      ...items.map((e) => {\r\n        if (e.id === id) {\r\n          e.type = type;\r\n        }\r\n\r\n        return e;\r\n      }),\r\n    ];\r\n\r\n    updateItems(updated);\r\n\r\n    handleUpdateTextarea();\r\n\r\n    const num = e.target.closest(`.item`).getAttribute(\"data-item-count\");\r\n    focusFirstInputWhenDropdownChanges(num);\r\n    generateJSONAndVariables();\r\n  };\r\n\r\n  const focusFirstInputWhenDropdownChanges = (num) => {\r\n    setTimeout(() => {\r\n      const $el = document.querySelector(\r\n        `[data-item-count*='${num}'] .FormItem-attr:nth-child(1) input`,\r\n      );\r\n\r\n      if (!$el) {\r\n        return;\r\n      }\r\n\r\n      $el.focus();\r\n    }, 50);\r\n\r\n    generateJSONAndVariables();\r\n  };\r\n\r\n  const onSortEnd = async ({ oldIndex, newIndex }) => {\r\n    const ordered = arrayMove(items, oldIndex, newIndex);\r\n\r\n    updateItems(ordered);\r\n\r\n    updateJSONAndVariables();\r\n  };\r\n\r\n  const handleToggle = (e, id) => {\r\n    let updated = [\r\n      ...items.map((e) => {\r\n        if (e.id === id) {\r\n          e.isToggled = !e.isToggled;\r\n        }\r\n\r\n        return e;\r\n      }),\r\n    ];\r\n\r\n    updateItems(updated);\r\n  };\r\n\r\n  /* This function is responsible for generating the JSON and Liquid. \r\n  Its only purpose is to make the function \"generateJSONAndVariables\" from utils.js to work. */\r\n  const generateJSON = async () => {\r\n    handleUpdateTextarea();\r\n\r\n    const variables = convertToLiquidVariables(jsonResult);\r\n\r\n    await sleep(50);\r\n    updateVariablesResult(variables);\r\n  };\r\n\r\n  return (\r\n    <div className=\"Creator\">\r\n      <SortableContainer onSortEnd={onSortEnd}>\r\n        {items.map((props, i) => {\r\n          return (\r\n            <SortableItem\r\n              key={`item-${short.generate()}`}\r\n              index={i}\r\n              value={\r\n                <Item\r\n                  duplicatedOptions={props.duplicatedOptions}\r\n                  duplicatedSubOptions={props.duplicatedSubOptions}\r\n                  isToggled={props.isToggled}\r\n                  Content={props.content}\r\n                  register={register}\r\n                  setValue={setValue}\r\n                  schema={schema}\r\n                  handleOnChange={handleOnChange}\r\n                  id={props.id}\r\n                  type={props.type}\r\n                  handleToggle={handleToggle}\r\n                  handleDeleteItem={handleDeleteItem}\r\n                  itemCount={`${i + 1}`}\r\n                  defaultValue={props.type}\r\n                  name={`name-${i}`}></Item>\r\n              }\r\n            />\r\n          );\r\n        })}\r\n      </SortableContainer>\r\n\r\n      <fieldset>\r\n        <button className=\"Creator-add\" onClick={() => handleAddItem()}>\r\n          Add\r\n        </button>\r\n        <button\r\n          className=\"Creator-test\"\r\n          onClick={async () => {\r\n            addCustomItem();\r\n          }}>\r\n          Test\r\n        </button>\r\n        <button\r\n          id=\"generateJSON\"\r\n          onClick={async () => {\r\n            generateJSON();\r\n          }}>\r\n          Generate JSON\r\n        </button>\r\n      </fieldset>\r\n    </div>\r\n  );\r\n}\r\n","D:\\Web Dev\\diegofortes-projects\\shopify-schema-editor\\src\\components\\Item.js",["86","87","88","89","90","91","92","93","94","95","96"],"import React, { useState, useEffect, useRef } from \"react\";\r\nimport {\r\n  addToIndex,\r\n  schema,\r\n  sleep,\r\n  transformDOMIntoJSON,\r\n  generateJSONAndVariables,\r\n  resetJsonResult,\r\n} from \"./../utils\";\r\n\r\nimport { useStatePersist as useStickyState } from \"use-state-persist\";\r\nimport Collapsible from \"react-collapsible\";\r\nimport short from \"short-uuid\";\r\nimport \"./Item.scss\";\r\n\r\nimport Text from \"./Text\";\r\nimport FormItem from \"./FormItem\";\r\n\r\nimport useStore from \"../store/store\";\r\n\r\nconst renderElement = (\r\n  type,\r\n  itemId,\r\n  handleOnFormChange,\r\n  itemCount,\r\n  duplicatedOptions,\r\n  duplicatedSubOptions,\r\n  defaultOptions,\r\n) => {\r\n  switch (type) {\r\n    case \"header\":\r\n      return (\r\n        <FormItem\r\n          itemCount={itemCount}\r\n          options={[\"content\"]}\r\n          handleOnFormChange={handleOnFormChange}\r\n          type={\"header\"}\r\n          itemId={itemId}\r\n          duplicatedOptions={duplicatedOptions}\r\n          defaultOptions={{\r\n            content: \"Options\",\r\n          }}\r\n        />\r\n      );\r\n    case \"paragraph\":\r\n      return (\r\n        <FormItem\r\n          itemCount={itemCount}\r\n          options={[\"content\"]}\r\n          type={\"paragraph\"}\r\n          duplicatedOptions={duplicatedOptions}\r\n          handleOnFormChange={handleOnFormChange}\r\n          itemId={itemId}\r\n        />\r\n      );\r\n    case \"text\":\r\n      return (\r\n        <FormItem\r\n          itemCount={itemCount}\r\n          options={[\"id\", \"label\", \"info\", \"default\"]}\r\n          type=\"text\"\r\n          duplicatedOptions={duplicatedOptions}\r\n          defaultOptions={defaultOptions}\r\n          handleOnFormChange={handleOnFormChange}\r\n          itemId={itemId}\r\n        />\r\n      );\r\n    case \"color\":\r\n      return (\r\n        <FormItem\r\n          itemCount={itemCount}\r\n          options={[\"id\", \"label\", \"info\", \"default\"]}\r\n          type=\"color\"\r\n          duplicatedOptions={duplicatedOptions}\r\n          handleOnFormChange={handleOnFormChange}\r\n          itemId={itemId}\r\n          defaultOptions={{\r\n            default: \"#ffffff\",\r\n          }}\r\n        />\r\n      );\r\n    case \"font_picker\":\r\n      return (\r\n        <FormItem\r\n          itemCount={itemCount}\r\n          options={[\"id\", \"label\", \"info\", \"default\"]}\r\n          type=\"font_picker\"\r\n          duplicatedOptions={duplicatedOptions}\r\n          handleOnFormChange={handleOnFormChange}\r\n          itemId={itemId}\r\n        />\r\n      );\r\n    case \"collection\":\r\n      return (\r\n        <FormItem\r\n          itemCount={itemCount}\r\n          options={[\"id\", \"label\", \"info\"]}\r\n          type=\"collection\"\r\n          duplicatedOptions={duplicatedOptions}\r\n          handleOnFormChange={handleOnFormChange}\r\n          itemId={itemId}\r\n        />\r\n      );\r\n    case \"product\":\r\n      return (\r\n        <FormItem\r\n          itemCount={itemCount}\r\n          options={[\"id\", \"label\", \"info\"]}\r\n          type=\"product\"\r\n          duplicatedOptions={duplicatedOptions}\r\n          handleOnFormChange={handleOnFormChange}\r\n          itemId={itemId}\r\n        />\r\n      );\r\n    case \"blog\":\r\n      return (\r\n        <FormItem\r\n          itemCount={itemCount}\r\n          options={[\"id\", \"label\", \"info\"]}\r\n          type=\"blog\"\r\n          duplicatedOptions={duplicatedOptions}\r\n          handleOnFormChange={handleOnFormChange}\r\n          itemId={itemId}\r\n        />\r\n      );\r\n    case \"page\":\r\n      return (\r\n        <FormItem\r\n          itemCount={itemCount}\r\n          options={[\"id\", \"label\", \"info\"]}\r\n          type=\"page\"\r\n          duplicatedOptions={duplicatedOptions}\r\n          handleOnFormChange={handleOnFormChange}\r\n          itemId={itemId}\r\n        />\r\n      );\r\n    case \"link_list\":\r\n      return (\r\n        <FormItem\r\n          itemCount={itemCount}\r\n          options={[\"id\", \"label\", \"info\"]}\r\n          type=\"link_list\"\r\n          duplicatedOptions={duplicatedOptions}\r\n          handleOnFormChange={handleOnFormChange}\r\n          itemId={itemId}\r\n        />\r\n      );\r\n    case \"url\":\r\n      return (\r\n        <FormItem\r\n          itemCount={itemCount}\r\n          options={[\"id\", \"label\", \"info\"]}\r\n          type=\"url\"\r\n          duplicatedOptions={duplicatedOptions}\r\n          handleOnFormChange={handleOnFormChange}\r\n          itemId={itemId}\r\n        />\r\n      );\r\n    case \"video_url\":\r\n      return (\r\n        <FormItem\r\n          itemCount={itemCount}\r\n          options={[\"id\", \"label\", \"accept\", \"placeholder\", \"info\", \"default\"]}\r\n          type=\"video_url\"\r\n          duplicatedOptions={duplicatedOptions}\r\n          duplicatedOptions={duplicatedOptions}\r\n          handleOnFormChange={handleOnFormChange}\r\n          itemId={itemId}\r\n        />\r\n      );\r\n    case \"richtext\":\r\n      return (\r\n        <FormItem\r\n          itemCount={itemCount}\r\n          options={[\"id\", \"label\", \"info\", \"default\"]}\r\n          type=\"richtext\"\r\n          duplicatedOptions={duplicatedOptions}\r\n          defaultOptions={{\r\n            default: \"<p></p>\",\r\n          }}\r\n          handleOnFormChange={handleOnFormChange}\r\n          itemId={itemId}\r\n        />\r\n      );\r\n\r\n    case \"checkbox\":\r\n      return (\r\n        <FormItem\r\n          itemCount={itemCount}\r\n          options={[\"id\", \"label\", \"info\", \"default\"]}\r\n          type=\"checkbox\"\r\n          duplicatedOptions={duplicatedOptions}\r\n          defaultOptions={{\r\n            default: \"true\",\r\n          }}\r\n          handleOnFormChange={handleOnFormChange}\r\n          itemId={itemId}\r\n        />\r\n      );\r\n\r\n    case \"range\":\r\n      return (\r\n        <FormItem\r\n          itemCount={itemCount}\r\n          options={[\r\n            \"id\",\r\n            \"label\",\r\n            \"min\",\r\n            \"max\",\r\n            \"step\",\r\n            \"unit\",\r\n            \"info\",\r\n            \"default\",\r\n          ]}\r\n          type=\"richtext\"\r\n          duplicatedOptions={duplicatedOptions}\r\n          defaultOptions={{\r\n            unit: \"px\",\r\n          }}\r\n          handleOnFormChange={handleOnFormChange}\r\n          itemId={itemId}\r\n        />\r\n      );\r\n    case \"textarea\":\r\n      return (\r\n        <FormItem\r\n          itemCount={itemCount}\r\n          options={[\"id\", \"label\", \"info\", \"placeholder\", \"default\"]}\r\n          type=\"textarea\"\r\n          duplicatedOptions={duplicatedOptions}\r\n          handleOnFormChange={handleOnFormChange}\r\n          itemId={itemId}\r\n        />\r\n      );\r\n    case \"number\":\r\n      return (\r\n        <FormItem\r\n          itemCount={itemCount}\r\n          options={[\"id\", \"label\", \"info\", \"default\"]}\r\n          type=\"number\"\r\n          duplicatedOptions={duplicatedOptions}\r\n          handleOnFormChange={handleOnFormChange}\r\n          itemId={itemId}\r\n        />\r\n      );\r\n    case \"select\":\r\n      return (\r\n        <FormItem\r\n          itemCount={itemCount}\r\n          options={[\"id\", \"label\", \"info\", \"default\"]}\r\n          subOptions={[\"value\", \"label\"]}\r\n          totalSubOptions={5}\r\n          type=\"select\"\r\n          duplicatedOptions={duplicatedOptions}\r\n          duplicatedSubOptions={duplicatedSubOptions}\r\n          handleOnFormChange={handleOnFormChange}\r\n          itemId={itemId}\r\n        />\r\n      );\r\n    case \"radio\":\r\n      return (\r\n        <FormItem\r\n          itemCount={itemCount}\r\n          options={[\"id\", \"label\", \"info\", \"default\"]}\r\n          subOptions={[\"value\", \"label\"]}\r\n          totalSubOptions={5}\r\n          type=\"radio\"\r\n          duplicatedOptions={duplicatedOptions}\r\n          handleOnFormChange={handleOnFormChange}\r\n          itemId={itemId}\r\n        />\r\n      );\r\n    case \"image_picker\":\r\n      return (\r\n        <FormItem\r\n          itemCount={itemCount}\r\n          options={[\"id\", \"label\", \"info\"]}\r\n          type=\"image_picker\"\r\n          duplicatedOptions={duplicatedOptions}\r\n          handleOnFormChange={handleOnFormChange}\r\n          itemId={itemId}\r\n        />\r\n      );\r\n    default:\r\n      return \"none\";\r\n  }\r\n};\r\n\r\nexport default function Item(props) {\r\n  let {\r\n    defaultValue,\r\n    name,\r\n    type,\r\n    id,\r\n    handleOnFormChange,\r\n    handleOnChange,\r\n    register,\r\n    setValue,\r\n    handleDeleteItem,\r\n    defaultOptions,\r\n    itemCount,\r\n    isToggled,\r\n    handleToggle,\r\n    handleDelete,\r\n    duplicatedOptions,\r\n    duplicatedSubOptions,\r\n  } = props;\r\n\r\n  const items = useStore((state) => state.items);\r\n  const updateItems = useStore((state) => state.updateItems);\r\n\r\n  /* TODO \r\n  \"duplicatedItemOptions' should receive the _json data. */\r\n\r\n  /** Responsible to duplicate items. */\r\n  const handleDuplicate = async () => {\r\n    /* \"$this\" is modified once \"setItems\" is updated. */\r\n    let $this = document.querySelector(`.item[data-item-count=\"${itemCount}\"]`);\r\n\r\n    let _json = transformDOMIntoJSON($this);\r\n    delete _json.type;\r\n\r\n    console.log(\"my josn\", _json);\r\n\r\n    /* ====== */\r\n    const index = parseInt(itemCount) - 1;\r\n\r\n    const _item = {\r\n      id: short.generate(),\r\n      type,\r\n      duplicatedOptions: _json,\r\n    };\r\n\r\n    const updatedItems = addToIndex(items, index, _item);\r\n    updateItems(updatedItems);\r\n\r\n    generateJSONAndVariables();\r\n  };\r\n\r\n  return (\r\n    <li\r\n      data-item-count={itemCount}\r\n      className={`item ${isToggled ? \"item--toggle\" : \"\"}`}>\r\n      <div className=\"item-wrapper\">\r\n        <select\r\n          onChange={(e) => handleOnChange(e)}\r\n          defaultValue={defaultValue}\r\n          name={name}\r\n          id={id}\r\n          ref={register}>\r\n          {schema\r\n            .sort((a, b) => a.id.localeCompare(b.id))\r\n            .map(({ id: _id }) => {\r\n              return (\r\n                <option key={_id} value={_id}>\r\n                  {_id}\r\n                </option>\r\n              );\r\n            })}\r\n        </select>\r\n        <button\r\n          tabindex=\"-1\"\r\n          onClick={() => {\r\n            resetJsonResult();\r\n            handleDeleteItem(id);\r\n          }}\r\n          className=\"item-delete item-button\">\r\n          Delete\r\n        </button>\r\n        <button\r\n          onClick={() => {\r\n            handleDuplicate();\r\n          }}\r\n          className=\"item-button\">\r\n          Dup\r\n        </button>\r\n        <button\r\n          className=\"item-button  item-button--toggle\"\r\n          onClick={(e) => handleToggle(e, id)}>\r\n          {\r\n            <svg\r\n              width={16}\r\n              height={16}\r\n              fill=\"currentColor\"\r\n              className=\"bi bi-chevron-down\"\r\n              viewBox=\"0 0 16 16\">\r\n              <path\r\n                fillRule=\"evenodd\"\r\n                d=\"M1.646 4.646a.5.5 0 0 1 .708 0L8 10.293l5.646-5.647a.5.5 0 0 1 .708.708l-6 6a.5.5 0 0 1-.708 0l-6-6a.5.5 0 0 1 0-.708z\"\r\n              />\r\n            </svg>\r\n          }\r\n        </button>\r\n      </div>\r\n      <div className=\"item-content\">\r\n        {renderElement(\r\n          type,\r\n          id,\r\n          handleOnFormChange,\r\n          itemCount,\r\n          duplicatedOptions,\r\n          duplicatedSubOptions,\r\n        )}\r\n      </div>\r\n      <br />\r\n    </li>\r\n  );\r\n}\r\n","D:\\Web Dev\\diegofortes-projects\\shopify-schema-editor\\src\\utils.js",["97","98","99","100"],"import short from \"short-uuid\";\r\n\r\nexport const schema = [\r\n  {\r\n    id: \"header\",\r\n  },\r\n  { id: \"paragraph\" },\r\n  { id: \"text\" },\r\n  { id: \"color\" },\r\n  { id: \"font_picker\" },\r\n  { id: \"collection\" },\r\n  { id: \"product\" },\r\n  { id: \"blog\" },\r\n  { id: \"page\" },\r\n  { id: \"link_list\" },\r\n  { id: \"range\" },\r\n  { id: \"url\" },\r\n  { id: \"video_url\" },\r\n  { id: \"richtext\" },\r\n  { id: \"image_picker\" },\r\n  { id: \"checkbox\" },\r\n  { id: \"textarea\" },\r\n  { id: \"number\" },\r\n  { id: \"select\" },\r\n  { id: \"radio\" },\r\n];\r\n\r\nexport function convertToLiquidVariables(json) {\r\n  let result = [];\r\n  result.push(JSON.parse(json));\r\n\r\n  let variables = [];\r\n  for (var each of result[0]) {\r\n    const id = each.id;\r\n\r\n    if (id) {\r\n      const variable = `{% assign ${id} = section.settings.${id} %}`;\r\n      variables.push(variable);\r\n    }\r\n  }\r\n\r\n  return variables.join(\"\\n\");\r\n}\r\n\r\nexport function updateLiquidVariablesDOM(variables) {\r\n  const $textarea = document.querySelector(`#CodeTable-variables`);\r\n\r\n  if (!$textarea) {\r\n    return;\r\n  }\r\n\r\n  $textarea.value = variables;\r\n}\r\n\r\nexport function copyToClipboard(text) {\r\n  if (window.clipboardData && window.clipboardData.setData) {\r\n    // IE specific code path to prevent textarea being shown while dialog is visible.\r\n    return window.clipboardData.setData(\"Text\", text);\r\n  } else if (\r\n    document.queryCommandSupported &&\r\n    document.queryCommandSupported(\"copy\")\r\n  ) {\r\n    var textarea = document.createElement(\"textarea\");\r\n    textarea.textContent = text;\r\n    textarea.style.position = \"fixed\"; // Prevent scrolling to bottom of page in MS Edge.\r\n    document.body.appendChild(textarea);\r\n    textarea.select();\r\n    try {\r\n      return document.execCommand(\"copy\"); // Security exception may be thrown by some browsers.\r\n    } catch (ex) {\r\n      console.warn(\"Copy to clipboard failed.\", ex);\r\n      return false;\r\n    } finally {\r\n      document.body.removeChild(textarea);\r\n    }\r\n  }\r\n}\r\n\r\n/* Updates the textarea with the section's JSON from the schema. */\r\nexport const updateJSONDOM = (json) => {\r\n  try {\r\n    const $textarea = window.document.getElementById(`CodeTable-result`);\r\n    $textarea.value = json;\r\n  } catch (err) {\r\n    console.error(\"Couldn't update textarea.\");\r\n  }\r\n};\r\n\r\nexport const focusDropdown = (delay = 50) => {\r\n  setTimeout(() => {\r\n    const $lastItem = document.querySelector(\r\n      `.Creator .item:last-of-type .item-wrapper:nth-child(1) select`,\r\n    );\r\n\r\n    if (!$lastItem) {\r\n      return;\r\n    }\r\n\r\n    $lastItem.focus();\r\n  }, delay);\r\n};\r\n\r\n/* This function retrieves a JSON from a DOM (<select>) node containing labels/inputs. */\r\nexport const transformDOMIntoJSON = (each) => {\r\n  let _json;\r\n  const type = each.querySelector(\"select\").value;\r\n  const $attributes = each.querySelectorAll(`.FormItem-attr`);\r\n  const $suboptions = each.querySelectorAll(`.FormItem-suboption`);\r\n\r\n  _json = {\r\n    type,\r\n  };\r\n\r\n  for (const attribute of $attributes) {\r\n    const name = attribute\r\n      .querySelector(`[data-label-name]`)\r\n      .getAttribute(`data-label-name`);\r\n\r\n    let value = attribute.querySelector(`input`).value;\r\n\r\n    /* If there is no property 'info', ignore */\r\n    if (name === \"info\" && (value === \"\" || !value)) {\r\n      continue;\r\n    }\r\n\r\n    /* If there is no property 'default', ignore */\r\n    if (name === \"default\" && (value === \"\" || !value)) {\r\n      continue;\r\n    }\r\n\r\n    /* If there is no property 'default', ignore */\r\n    if (name === \"placeholder\" && (value === \"\" || !value)) {\r\n      continue;\r\n    }\r\n\r\n    /* If this is a 'textarea', replace all line breaks for liquid-friendly line breaks */\r\n    if (type === \"textarea\" && name === \"default\" && value !== \"\") {\r\n      value = value.replace(/\\\\n/g, `\\n`);\r\n    }\r\n\r\n    /* type is \"checkbox\" and there is a \"default\", convert it to boolean */\r\n    if (type === \"checkbox\" && name === \"default\" && value !== \"\") {\r\n      value = value.toLowerCase() === \"true\" ? true : false;\r\n    }\r\n\r\n    /* type is \"range\", convert values to integer */\r\n    if (\r\n      type === \"range\" &&\r\n      value !== \"\" &&\r\n      (name === \"default\" ||\r\n        name === \"min\" ||\r\n        name === \"max\" ||\r\n        name === \"step\")\r\n    ) {\r\n      value = parseInt(value);\r\n    }\r\n\r\n    _json[name] = value;\r\n  }\r\n\r\n  /* If is of type 'select' or 'radio' it contains an array of objects. */\r\n  if (\r\n    (type === \"select\" || type === \"radio\") &&\r\n    $suboptions &&\r\n    $suboptions.length >= 1\r\n  ) {\r\n    let _suboptions = [];\r\n\r\n    for (const suboption of $suboptions) {\r\n      let _suboptionsJSON = {};\r\n\r\n      /* Getting all the sub options available. */\r\n      const $inputs = suboption.querySelectorAll(`input`);\r\n\r\n      [...$inputs].map(($input) => {\r\n        try {\r\n          const labelName = $input.getAttribute(\"label\");\r\n          const value = $input.value;\r\n\r\n          if (value === \"\") {\r\n            _suboptionsJSON = delete _suboptionsJSON[labelName];\r\n            return null;\r\n          }\r\n\r\n          _suboptionsJSON[labelName] = value;\r\n        } catch (err) {}\r\n      });\r\n\r\n      if (typeof _suboptionsJSON !== \"boolean\") {\r\n        _suboptions.push(_suboptionsJSON);\r\n      }\r\n    }\r\n\r\n    _json[\"options\"] = _suboptions;\r\n  }\r\n\r\n  return _json;\r\n};\r\n\r\n/* Converts all DOM items into JSON for the schema. */\r\nexport const generateJSONSchema = () => {\r\n  const $items = window.document.querySelectorAll(`.item`);\r\n\r\n  let finalJSON = [];\r\n\r\n  if (!$items) {\r\n    return;\r\n  }\r\n\r\n  for (const each of $items) {\r\n    const JSON = transformDOMIntoJSON(each);\r\n    finalJSON.push(JSON);\r\n  }\r\n\r\n  const result = JSON.stringify(finalJSON, null, 2);\r\n\r\n  return result;\r\n};\r\n\r\n/* This function will convert a typical Liquid schema into a EZFY Shopify Section Creator JSON-friendly items. */\r\nexport const convertSchemaJSONToItems = (json) => {\r\n  return json.map((e) => {\r\n    var object = { ...e };\r\n\r\n    delete object.type;\r\n    // delete object.options;\r\n\r\n    return {\r\n      id: short.generate(),\r\n      type: e.type,\r\n\r\n      duplicatedOptions: {\r\n        ...object,\r\n      },\r\n      duplicatedSubOptions: e.options,\r\n    };\r\n  });\r\n};\r\n\r\nexport const updateJSONAndVariables = async () => {\r\n  const json = generateJSONSchema();\r\n  const variables = convertToLiquidVariables(json);\r\n\r\n  updateJSONDOM(json);\r\n  await sleep(10);\r\n  updateLiquidVariablesDOM(variables);\r\n  await sleep(10);\r\n  updateSectionWithUpdatedSchema(json);\r\n};\r\n\r\n/* Sets the current JSON edited via the DOM items. */\r\nexport const setJsonResult = (_json) => {\r\n  let initialState = localStorage.getItem(\"json_initial_state\");\r\n\r\n  if (!initialState) {\r\n    initialState = _json;\r\n    localStorage.setItem(\"json_initial_state\", initialState);\r\n  }\r\n\r\n  const _previous = localStorage.getItem(\"json_results\");\r\n  const previous = _previous ? JSON.parse(_previous).current : {};\r\n\r\n  console.log(\"xl\", initialState);\r\n\r\n  const json = {\r\n    initialState,\r\n    previous,\r\n    current: _json,\r\n  };\r\n\r\n  const result = JSON.stringify(json);\r\n\r\n  localStorage.setItem(\"json_results\", result);\r\n};\r\n\r\n/* Gets the current JSON being edited via the DOM items. */\r\nexport const getJsonResult = (_) => {\r\n  const _json = localStorage.getItem(\"json_results\");\r\n\r\n  if (!_json) {\r\n    return {};\r\n  }\r\n\r\n  const json = JSON.parse(_json);\r\n\r\n  const result = {\r\n    initialState: JSON.parse(json.initialState),\r\n    previous: JSON.parse(json.previous),\r\n    current: JSON.parse(json.current),\r\n  };\r\n\r\n  console.log(\"getjs\", result);\r\n  return result;\r\n};\r\n\r\nexport const resetJsonResult = (_) => {\r\n  localStorage.removeItem(\"json_initial_state\");\r\n  localStorage.removeItem(\"json_results\");\r\n};\r\n\r\n/* This takes the section the user added and update its JSON with the new schema edited in the app's UI */\r\nexport const updateSectionWithUpdatedSchema = async (json) => {\r\n  const $section = window.document.querySelector(`#sectionCode`);\r\n  const $result = window.document.querySelector(`#sectionResult`);\r\n\r\n  try {\r\n    const section = $section.value;\r\n\r\n    if (!/{% schema %}/gim.test(section) || section.trim() === \"\") {\r\n      return;\r\n    }\r\n\r\n    const _schema = _extractTextBetween(\r\n      section,\r\n      `{% schema %}`,\r\n      `{% endschema %}`,\r\n    );\r\n    let schema = JSON.parse(_schema);\r\n\r\n    schema.settings = JSON.parse(json);\r\n\r\n    const result = JSON.stringify(schema, null, 2);\r\n\r\n    const _updatedSection = replaceTextBetween(\r\n      section,\r\n      `{% schema %}`,\r\n      `{% endschema %}`,\r\n      result,\r\n    );\r\n\r\n    console.log(\"1xx\", _updatedSection);\r\n\r\n    const updatedSection = replaceIdThatWasUpdated(_updatedSection);\r\n\r\n    $result.value = updatedSection;\r\n  } catch (err) {\r\n    console.log(\"xx error in schema: \", err);\r\n    // console.log(\"error in schema: \", schema);\r\n  }\r\n};\r\n\r\n/*\r\nThis is used to rename the section's ids.  This function does the following:\r\n\r\n1. Compares two states (previous and current)\r\n2. Check which ID of the items was lastly modified\r\n3. Returns both the old ID and the current ID. \r\n\r\n\r\nLet's say you have \"section.settings.ok\" in your code, and you modify it to \"ok2\". \r\nThis code will show up bth the \"ok\" and \"ok2\" so you can modify them in the section. */\r\nexport const getIdThatWasModified = (\r\n  state,\r\n  previousState,\r\n  type = \"section\",\r\n) => {\r\n  const isSameUser = (state, previousState) => state.id === previousState.id;\r\n\r\n  const onlyInLeft = (left, right, compareFunction) =>\r\n    left.filter(\r\n      (leftValue) =>\r\n        !right.some((rightValue) => compareFunction(leftValue, rightValue)),\r\n    );\r\n\r\n  const onlyInState = onlyInLeft(state, previousState, isSameUser);\r\n  const onlyInPreviousState = onlyInLeft(previousState, state, isSameUser);\r\n\r\n  if (!onlyInPreviousState[0] || !onlyInState[0]) {\r\n    return \"\";\r\n  }\r\n\r\n  console.log(\"only in\", onlyInState);\r\n\r\n  const previousIds = onlyInState.map((e) => e.id);\r\n  const ids = onlyInPreviousState.map((e) => e.id);\r\n\r\n  let result = [];\r\n\r\n  for (const [i, each] of ids.entries()) {\r\n    result.push({\r\n      previous: `${type}.settings.${previousIds[i]}`,\r\n      current: `${type}.settings.${ids[i]}`,\r\n    });\r\n  }\r\n\r\n  return result;\r\n};\r\n\r\nexport const replaceIdThatWasUpdated = (section) => {\r\n  const _json = getJsonResult();\r\n\r\n  const modifiedIds = getIdThatWasModified(_json.initialState, _json.current);\r\n\r\n  console.log(\"cookie - must replace this: \", modifiedIds);\r\n\r\n  if (!modifiedIds) {\r\n    return section;\r\n  }\r\n\r\n  modifiedIds.map((e) => {\r\n    section = section.replaceAll(e.previous || e.current, e.current);\r\n  });\r\n\r\n  return section;\r\n};\r\n\r\nexport const updateSectionSettingVariables = () => {};\r\n\r\nexport function sleep(ms) {\r\n  return new Promise((resolve) => setTimeout(resolve, ms));\r\n}\r\n\r\nexport function addToIndex(arr, index, newItem) {\r\n  return [...arr.slice(0, index), newItem, ...arr.slice(index)];\r\n}\r\n\r\nexport async function generateJSONAndVariables() {\r\n  return;\r\n  const $generator = window.document.getElementById(\"generateJSON\");\r\n\r\n  if ($generator) {\r\n    $generator.click();\r\n    // await sleep(25);\r\n    // $generator.click();\r\n  }\r\n}\r\n\r\nexport function _extractTextBetween(text, start, end) {\r\n  if (!start || !end) {\r\n    throw new Error(`Please add a \"start\" and \"end\" parameter`);\r\n  }\r\n\r\n  return text.split(start)[1].split(end)[0];\r\n}\r\n\r\nexport function replaceTextBetween(text, start, end, newText) {\r\n  if (!start || !end) {\r\n    throw new Error(`Please add a \"start\" and \"end\" parameter`);\r\n  }\r\n\r\n  const result = `${text.split(start)[0]}\r\n  ${start}\r\n  ${newText}  \r\n  ${end}\r\n  ${text.split(end)[1]}`;\r\n\r\n  return result;\r\n}\r\n","D:\\Web Dev\\diegofortes-projects\\shopify-schema-editor\\src\\components\\ConfirmDialog.js",[],"D:\\Web Dev\\diegofortes-projects\\shopify-schema-editor\\src\\components\\Text.js",["101","102","103","104","105","106","107","108","109"],"import React, { useState, useEffect } from \"react\";\r\n\r\nimport { useForm } from \"react-hook-form\";\r\nimport { useStatePersist as useStickyState } from \"use-state-persist\";\r\n\r\nexport default function Text(props) {\r\n  const { itemId } = props;\r\n\r\n  const initialValues = {\r\n    [itemId + \"_firstname\"]: \"\",\r\n    [itemId + \"_age\"]: \"\",\r\n  };\r\n\r\n  const { register, handleSubmit, watch, errors, setValue } = useForm();\r\n\r\n  const [items, setItems] = useStickyState(\"@items\");\r\n  const [values, setValues] = useStickyState(\"@values\", initialValues);\r\n\r\n  const handleInputChange = (e) => {\r\n    const name = e.target.name;\r\n    const value = e.target.value;\r\n\r\n    setValues({\r\n      ...values,\r\n      [name]: value,\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    console.log(\"initial state\", initialValues);\r\n  }, []);\r\n\r\n  return (\r\n    <fieldset>\r\n      <input\r\n        value={values[itemId + \"_ID\"]}\r\n        onChange={handleInputChange}\r\n        name={`${itemId}_ID`}\r\n        label=\"ID\"\r\n        placeholder=\"\"\r\n      />\r\n      <input\r\n        value={values[itemId + \"_label\"]}\r\n        onChange={handleInputChange}\r\n        name={`${itemId}_label`}\r\n        label=\"label\"\r\n      />\r\n    </fieldset>\r\n  );\r\n}\r\n","D:\\Web Dev\\diegofortes-projects\\shopify-schema-editor\\src\\components\\Form.js",["110","111","112"],"D:\\Web Dev\\diegofortes-projects\\shopify-schema-editor\\src\\components\\BeautifulDND.js",["113","114","115"],"D:\\Web Dev\\diegofortes-projects\\shopify-schema-editor\\src\\components\\FormItem.js",["116","117","118","119","120","121","122","123","124","125","126","127","128","129"],"D:\\Web Dev\\diegofortes-projects\\shopify-schema-editor\\src\\components\\CodeTable.js",["130","131","132"],"import React, { useEffect } from \"react\";\r\n\r\nimport {\r\n  convertSchemaJSONToItems,\r\n  convertToLiquidVariables,\r\n  copyToClipboard,\r\n  generateJSONAndVariables,\r\n  generateJSONSchema,\r\n  sleep,\r\n  _extractTextBetween,\r\n  setJsonResult,\r\n} from \"../utils\";\r\n\r\nimport \"./CodeTable.scss\";\r\nimport useStore from \"./../store/store\";\r\n\r\nexport default function CodeTable() {\r\n  const addItems = useStore((state) => state.addItems);\r\n  const removeItems = useStore((state) => state.removeItems);\r\n  const section = useStore((state) => state.section);\r\n  const addSection = useStore((state) => state.addSection);\r\n\r\n  const variablesResult = useStore((state) => state.variablesResult);\r\n\r\n  const convertSectionToJson = () => {\r\n    const $code = window.document.querySelector(`#sectionCode`);\r\n\r\n    try {\r\n      const _code = $code.value;\r\n      const code = _extractTextBetween(\r\n        _code,\r\n        `{% schema %}`,\r\n        `{% endschema %}`,\r\n      );\r\n\r\n      const schema = convertSchemaJSONToItems(JSON.parse(code).settings);\r\n\r\n      removeItems();\r\n      addItems(schema);\r\n\r\n      console.log(\"my schema\", schema);\r\n    } catch (err) {\r\n      console.log(\"error in schema: \", err);\r\n    }\r\n  };\r\n\r\n  const handleSectionCodeChange = () => {\r\n    const $section = document.querySelector(`#sectionCode`);\r\n\r\n    const section = $section.value;\r\n\r\n    addSection(section);\r\n  };\r\n\r\n  return (\r\n    <div className=\"CodeTable\">\r\n      <div className=\"CodeTable-wrapper\">\r\n        <textarea\r\n          defaultValue={variablesResult ? variablesResult : \"\"}\r\n          value={variablesResult ? variablesResult : \"\"}\r\n          readOnly={true}\r\n          id=\"CodeTable-variables\"\r\n          cols=\"10\"\r\n          rows=\"10\"></textarea>\r\n\r\n        <div className=\"CodeTable-tables\">\r\n          <textarea\r\n            defaultValue={\"\"}\r\n            value={\"\"}\r\n            readOnly={false}\r\n            name=\"\"\r\n            id=\"CodeTable-result\"\r\n            cols=\"30\"\r\n            rows=\"10\"></textarea>\r\n          <div className=\"CodeTable-tables-wrapper\">\r\n            <textarea\r\n              placeholder=\"Paste section code here\"\r\n              value={`<p> margin top: {{ section.settings.margin-top }} </p>\r\n              <p> margin bottom: {{ section.settings.margin-bottom }} </p>\r\n              \r\n              {% schema %}\r\n              {\r\n              \"name\": \"Premium Navbar TESTING\",\r\n              \"class\": \"premium-navbar-section\",\r\n              \"settings\": [\r\n              {\r\n              \"type\": \"paragraph\",\r\n              \"content\": \"All images should be 65 x 65px.\"\r\n              },\r\n                   {\r\n                        \"type\":      \"range\",\r\n                        \"id\":        \"margin-top\",\r\n                        \"min\":       -40,\r\n                        \"max\":        50,\r\n                        \"step\":       1,\r\n                        \"unit\":       \"px\",\r\n                        \"label\":     \"Spacing Top\",\r\n                    \"info\": \"Default: 0\",\r\n                        \"default\":   0\r\n                    },\r\n                   {\r\n                        \"type\":      \"range\",\r\n                        \"id\":        \"margin-bottom\",\r\n                        \"min\":       -40,\r\n                        \"max\":        50,\r\n                        \"step\":       1,\r\n                        \"unit\":       \"px\",\r\n                        \"label\":     \"Spacing Bottom\",\r\n                      \"info\": \"Default: 0\",\r\n                        \"default\":   0\r\n                    },\r\n                    {\r\n                      \"type\": \"checkbox\",\r\n                      \"id\": \"display-collections-ok\",\r\n                      \"label\": \"Display all collections\",\r\n                  \"info\": \"Check this to display all of your collections automatically.\",\r\n                  \"default\": true\r\n                    },\r\n                {\r\n                  \"type\": \"richtext\",\r\n                  \"id\": \"hello\",\r\n                  \"label\": \"Richtext\",\r\n                  \"default\": \"<p>welcome</p>\"\r\n                }\r\n              \r\n              ],\r\n              \"blocks\": [\r\n                  {\r\n                    \"type\": \"select\",\r\n                    \"name\": \"New Item\",\r\n                    \"settings\": [\r\n                       {\r\n                      \"type\": \"image_picker\",\r\n                      \"id\": \"image\",\r\n                      \"label\": \"Image\"\r\n                      },\r\n               {\r\n                      \"type\": \"url\",\r\n                      \"id\": \"link\",\r\n                      \"label\": \"URL\"\r\n                    },\r\n                      {\r\n                        \"id\": \"text\",\r\n                        \"type\": \"text\",\r\n                        \"label\": \"Text\"\r\n                      }\r\n                    ]\r\n                  }\r\n                ],\r\n              \"presets\": [\r\n              {\r\n              \"name\": \"Premium Navbar TESTING\",\r\n              \"category\": \"Custom\"\r\n              }\r\n              ]\r\n              }\r\n              {% endschema %}\r\n              \r\n              <p>we ends here yoyo</p>`}\r\n              defaultValue=\"\"\r\n              name=\"\"\r\n              onChange={() => handleSectionCodeChange()}\r\n              id=\"sectionCode\"\r\n              cols=\"30\"\r\n              rows=\"10\"></textarea>\r\n            <button\r\n              onClick={async () => {\r\n                convertSectionToJson();\r\n                await sleep(100);\r\n                const json = generateJSONSchema();\r\n                setJsonResult(json);\r\n              }}\r\n              id=\"convertToJson\"\r\n              className=\"CodeTable-convert\">\r\n              Go\r\n            </button>\r\n          </div>\r\n\r\n          <textarea\r\n            defaultValue={\"\"}\r\n            readOnly={true}\r\n            name=\"\"\r\n            placeholder=\"Result\"\r\n            id=\"sectionResult\"\r\n            cols=\"30\"\r\n            rows=\"10\"></textarea>\r\n        </div>\r\n\r\n        <button onClick={() => copyToClipboard()}>Copy to clipboard</button>\r\n\r\n        <button\r\n          onClick={() => {\r\n            generateJSONAndVariables();\r\n          }}>\r\n          Generate JSON\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","D:\\Web Dev\\diegofortes-projects\\shopify-schema-editor\\src\\store\\store.js",[],{"ruleId":"133","replacedBy":"134"},{"ruleId":"135","replacedBy":"136"},{"ruleId":"137","severity":1,"message":"138","line":1,"column":8,"nodeType":"139","messageId":"140","endLine":1,"endColumn":12},{"ruleId":"137","severity":1,"message":"141","line":3,"column":8,"nodeType":"139","messageId":"140","endLine":3,"endColumn":11},{"ruleId":"142","severity":1,"message":"143","line":16,"column":11,"nodeType":"144","endLine":16,"endColumn":58},{"ruleId":"142","severity":1,"message":"143","line":28,"column":11,"nodeType":"144","endLine":28,"endColumn":63},{"ruleId":"137","severity":1,"message":"145","line":17,"column":35,"nodeType":"139","messageId":"140","endLine":17,"endColumn":40},{"ruleId":"137","severity":1,"message":"146","line":17,"column":42,"nodeType":"139","messageId":"140","endLine":17,"endColumn":48},{"ruleId":"137","severity":1,"message":"147","line":1,"column":17,"nodeType":"139","messageId":"140","endLine":1,"endColumn":26},{"ruleId":"137","severity":1,"message":"148","line":1,"column":28,"nodeType":"139","messageId":"140","endLine":1,"endColumn":36},{"ruleId":"137","severity":1,"message":"149","line":14,"column":3,"nodeType":"139","messageId":"140","endLine":14,"endColumn":16},{"ruleId":"137","severity":1,"message":"150","line":20,"column":3,"nodeType":"139","messageId":"140","endLine":20,"endColumn":16},{"ruleId":"137","severity":1,"message":"151","line":23,"column":8,"nodeType":"139","messageId":"140","endLine":23,"endColumn":21},{"ruleId":"137","severity":1,"message":"152","line":36,"column":31,"nodeType":"139","messageId":"140","endLine":36,"endColumn":43},{"ruleId":"137","severity":1,"message":"145","line":36,"column":45,"nodeType":"139","messageId":"140","endLine":36,"endColumn":50},{"ruleId":"137","severity":1,"message":"146","line":36,"column":52,"nodeType":"139","messageId":"140","endLine":36,"endColumn":58},{"ruleId":"137","severity":1,"message":"153","line":37,"column":10,"nodeType":"139","messageId":"140","endLine":37,"endColumn":26},{"ruleId":"137","severity":1,"message":"154","line":37,"column":28,"nodeType":"139","messageId":"140","endLine":37,"endColumn":47},{"ruleId":"137","severity":1,"message":"155","line":55,"column":9,"nodeType":"139","messageId":"140","endLine":55,"endColumn":20},{"ruleId":"137","severity":1,"message":"148","line":1,"column":17,"nodeType":"139","messageId":"140","endLine":1,"endColumn":25},{"ruleId":"137","severity":1,"message":"147","line":1,"column":27,"nodeType":"139","messageId":"140","endLine":1,"endColumn":36},{"ruleId":"137","severity":1,"message":"156","line":1,"column":38,"nodeType":"139","messageId":"140","endLine":1,"endColumn":44},{"ruleId":"137","severity":1,"message":"157","line":5,"column":3,"nodeType":"139","messageId":"140","endLine":5,"endColumn":8},{"ruleId":"137","severity":1,"message":"158","line":11,"column":29,"nodeType":"139","messageId":"140","endLine":11,"endColumn":43},{"ruleId":"137","severity":1,"message":"159","line":12,"column":8,"nodeType":"139","messageId":"140","endLine":12,"endColumn":19},{"ruleId":"137","severity":1,"message":"160","line":16,"column":8,"nodeType":"139","messageId":"140","endLine":16,"endColumn":12},{"ruleId":"161","severity":1,"message":"162","line":166,"column":11,"nodeType":"163","endLine":166,"endColumn":48},{"ruleId":"137","severity":1,"message":"164","line":298,"column":5,"nodeType":"139","messageId":"140","endLine":298,"endColumn":13},{"ruleId":"137","severity":1,"message":"165","line":300,"column":5,"nodeType":"139","messageId":"140","endLine":300,"endColumn":19},{"ruleId":"137","severity":1,"message":"166","line":304,"column":5,"nodeType":"139","messageId":"140","endLine":304,"endColumn":17},{"ruleId":"167","severity":1,"message":"168","line":175,"column":33,"nodeType":"169","messageId":"170","endLine":175,"endColumn":35},{"ruleId":"137","severity":1,"message":"171","line":379,"column":18,"nodeType":"139","messageId":"140","endLine":379,"endColumn":22},{"ruleId":"167","severity":1,"message":"172","line":400,"column":23,"nodeType":"169","messageId":"173","endLine":400,"endColumn":25},{"ruleId":"174","severity":1,"message":"175","line":419,"column":3,"nodeType":"176","messageId":"177","endLine":425,"endColumn":4},{"ruleId":"137","severity":1,"message":"148","line":1,"column":17,"nodeType":"139","messageId":"140","endLine":1,"endColumn":25},{"ruleId":"137","severity":1,"message":"178","line":14,"column":11,"nodeType":"139","messageId":"140","endLine":14,"endColumn":19},{"ruleId":"137","severity":1,"message":"152","line":14,"column":21,"nodeType":"139","messageId":"140","endLine":14,"endColumn":33},{"ruleId":"137","severity":1,"message":"145","line":14,"column":35,"nodeType":"139","messageId":"140","endLine":14,"endColumn":40},{"ruleId":"137","severity":1,"message":"146","line":14,"column":42,"nodeType":"139","messageId":"140","endLine":14,"endColumn":48},{"ruleId":"137","severity":1,"message":"164","line":14,"column":50,"nodeType":"139","messageId":"140","endLine":14,"endColumn":58},{"ruleId":"137","severity":1,"message":"179","line":16,"column":10,"nodeType":"139","messageId":"140","endLine":16,"endColumn":15},{"ruleId":"137","severity":1,"message":"180","line":16,"column":17,"nodeType":"139","messageId":"140","endLine":16,"endColumn":25},{"ruleId":"181","severity":1,"message":"182","line":31,"column":6,"nodeType":"183","endLine":31,"endColumn":8,"suggestions":"184"},{"ruleId":"137","severity":1,"message":"185","line":1,"column":17,"nodeType":"139","messageId":"140","endLine":1,"endColumn":26},{"ruleId":"137","severity":1,"message":"186","line":2,"column":8,"nodeType":"139","messageId":"140","endLine":2,"endColumn":17},{"ruleId":"137","severity":1,"message":"187","line":25,"column":7,"nodeType":"139","messageId":"140","endLine":25,"endColumn":20},{"ruleId":"137","severity":1,"message":"188","line":3,"column":34,"nodeType":"139","messageId":"140","endLine":3,"endColumn":44},{"ruleId":"137","severity":1,"message":"189","line":4,"column":8,"nodeType":"139","messageId":"140","endLine":4,"endColumn":16},{"ruleId":"137","severity":1,"message":"190","line":27,"column":3,"nodeType":"139","messageId":"140","endLine":27,"endColumn":14},{"ruleId":"137","severity":1,"message":"191","line":4,"column":8,"nodeType":"139","messageId":"140","endLine":4,"endColumn":13},{"ruleId":"137","severity":1,"message":"192","line":7,"column":3,"nodeType":"139","messageId":"140","endLine":7,"endColumn":27},{"ruleId":"137","severity":1,"message":"193","line":8,"column":3,"nodeType":"139","messageId":"140","endLine":8,"endColumn":27},{"ruleId":"137","severity":1,"message":"157","line":11,"column":3,"nodeType":"139","messageId":"140","endLine":11,"endColumn":8},{"ruleId":"137","severity":1,"message":"194","line":13,"column":3,"nodeType":"139","messageId":"140","endLine":13,"endColumn":16},{"ruleId":"137","severity":1,"message":"195","line":14,"column":3,"nodeType":"139","messageId":"140","endLine":14,"endColumn":27},{"ruleId":"137","severity":1,"message":"153","line":20,"column":10,"nodeType":"139","messageId":"140","endLine":20,"endColumn":26},{"ruleId":"137","severity":1,"message":"154","line":20,"column":28,"nodeType":"139","messageId":"140","endLine":20,"endColumn":47},{"ruleId":"137","severity":1,"message":"196","line":25,"column":9,"nodeType":"139","messageId":"140","endLine":25,"endColumn":18},{"ruleId":"137","severity":1,"message":"179","line":28,"column":9,"nodeType":"139","messageId":"140","endLine":28,"endColumn":14},{"ruleId":"137","severity":1,"message":"197","line":34,"column":5,"nodeType":"139","messageId":"140","endLine":34,"endColumn":9},{"ruleId":"137","severity":1,"message":"198","line":41,"column":5,"nodeType":"139","messageId":"140","endLine":41,"endColumn":14},{"ruleId":"137","severity":1,"message":"199","line":93,"column":9,"nodeType":"139","messageId":"140","endLine":93,"endColumn":20},{"ruleId":"137","severity":1,"message":"200","line":132,"column":20,"nodeType":"139","messageId":"140","endLine":132,"endColumn":33},{"ruleId":"137","severity":1,"message":"147","line":1,"column":17,"nodeType":"139","messageId":"140","endLine":1,"endColumn":26},{"ruleId":"137","severity":1,"message":"192","line":5,"column":3,"nodeType":"139","messageId":"140","endLine":5,"endColumn":27},{"ruleId":"137","severity":1,"message":"201","line":20,"column":9,"nodeType":"139","messageId":"140","endLine":20,"endColumn":16},"no-native-reassign",["202"],"no-negated-in-lhs",["203"],"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","'URL' is defined but never used.","react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener","JSXOpeningElement","'watch' is assigned a value but never used.","'errors' is assigned a value but never used.","'useEffect' is defined but never used.","'useState' is defined but never used.","'focusDropdown' is defined but never used.","'getJsonResult' is defined but never used.","'ConfirmDialog' is defined but never used.","'handleSubmit' is assigned a value but never used.","'lastChangedInput' is assigned a value but never used.","'setLastChangedInput' is assigned a value but never used.","'watchValues' is assigned a value but never used.","'useRef' is defined but never used.","'sleep' is defined but never used.","'useStickyState' is defined but never used.","'Collapsible' is defined but never used.","'Text' is defined but never used.","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","'setValue' is assigned a value but never used.","'defaultOptions' is assigned a value but never used.","'handleDelete' is assigned a value but never used.","array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","'each' is assigned a value but never used.","Array.prototype.map() expects a return value from arrow function.","expectedInside","no-unreachable","Unreachable code.","VariableDeclaration","unreachableCode","'register' is assigned a value but never used.","'items' is assigned a value but never used.","'setItems' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'initialValues'. Either include it or remove the dependency array.","ArrayExpression",["204"],"'Component' is defined but never used.","'PropTypes' is defined but never used.","'generateItems' is assigned a value but never used.","'Controller' is defined but never used.","'ReactDOM' is defined but never used.","'renderCount' is assigned a value but never used.","'short' is defined but never used.","'convertToLiquidVariables' is defined but never used.","'generateJSONAndVariables' is defined but never used.","'updateJSONDOM' is defined but never used.","'updateLiquidVariablesDOM' is defined but never used.","'variables' is assigned a value but never used.","'type' is assigned a value but never used.","'itemCount' is assigned a value but never used.","'filterValue' is assigned a value but never used.","'setInputFocus' is assigned a value but never used.","'section' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"205","fix":"206"},"Update the dependencies array to be: [initialValues]",{"range":"207","text":"208"},[804,806],"[initialValues]"]